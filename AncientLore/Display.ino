//----------------------Menus images------------------
const uint16_t IMAGE_TITLE[] = {
  80,     // frame width
  26,     // frame height
  1,      // number of frames
  1,      // animation speed
  0xd1b5, // transparent color
  0,      // RGB565 color mode
  // frame 1/1
  0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xfb40, 0xfb40, 0xfb40, 0xfb40, 0xd1b5, 0xd1b5, 0xd1b5, 0xfb40, 0xfb40, 0xfb40, 0xfb40, 0xfb40, 0xd1b5, 0xfb40, 0xfb40, 0xfb40, 0xd1b5, 0xd1b5, 0xfb40, 0xfb40, 0xfb40, 0xfb40, 0xfb40, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xfb40, 0xfb40, 0xfb40, 0xfb40, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xfb40, 0xfb40, 0xfb40, 0xfb40, 0xfb40, 0xfb40, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xfb40, 0xfb40, 0xfb40, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 
  0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xfb40, 0xfb40, 0xfb40, 0xfe80, 0xfe80, 0xfb40, 0xfb40, 0xfb40, 0xfb40, 0xfb40, 0xfe80, 0xfe80, 0xfb40, 0xfb40, 0xfb40, 0xfb40, 0xfe80, 0xfb40, 0xfb40, 0xfb40, 0xfb40, 0xfe80, 0xfe80, 0xfe80, 0xfb40, 0xfb40, 0xfb40, 0xfb40, 0xfb40, 0xfb40, 0xfe80, 0xfe80, 0xfb40, 0xfb40, 0xfb40, 0xfb40, 0xfb40, 0xfb40, 0xfe80, 0xfe80, 0xfe80, 0xfe80, 0xfb40, 0xfb40, 0xfb40, 0xfb40, 0xfb40, 0xfb40, 0xfb40, 0xfb40, 0xfe80, 0xfb40, 0xfb40, 0xfb40, 0xfb40, 0xfb40, 0xfb40, 0xfb40, 0xfb40, 0xfb40, 0xfb40, 0xfb40, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 
  0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xfb40, 0xfb40, 0xfe80, 0xfe80, 0xfe80, 0xfe80, 0xfe80, 0xfb40, 0xfb40, 0xfe80, 0xfe80, 0xfe80, 0xfe80, 0xfe80, 0xfb40, 0xfe80, 0xfe80, 0xfe80, 0xfe80, 0xfe80, 0xfe80, 0xfe80, 0xfe80, 0xfe80, 0xfe80, 0xfe80, 0xfe80, 0xfe80, 0xfb40, 0xfe80, 0xfe80, 0xfe80, 0xfe80, 0xfe80, 0xfb40, 0xfe80, 0xfe80, 0xfe80, 0xfe80, 0xfe80, 0xfe80, 0xfe80, 0xfe80, 0xfb40, 0xfe80, 0xfe80, 0xfe80, 0xfe80, 0xfb40, 0xfe80, 0xfe80, 0xfe80, 0xfe80, 0xfe80, 0xfe80, 0xfe80, 0xfe80, 0xfe80, 0xfe80, 0xfe80, 0xfe80, 0xfe80, 0xfb40, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 
  0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xfb40, 0xfe80, 0xfe80, 0xfd55, 0xf800, 0xf800, 0xfe9a, 0xfe80, 0xfb40, 0xfe80, 0xfc30, 0xf800, 0xf904, 0xfe80, 0xfb40, 0xfe80, 0xfb0c, 0xf800, 0xfe80, 0xfe80, 0xfe80, 0xf800, 0xf800, 0xf800, 0xf800, 0xf800, 0xf800, 0xfe80, 0xf800, 0xf800, 0xf800, 0xf800, 0xf800, 0xf800, 0xfe80, 0xfe80, 0xfc30, 0xf800, 0xf800, 0xf800, 0xf800, 0xf800, 0xfdd7, 0xfe80, 0xfc30, 0xf800, 0xf904, 0xfe80, 0xfe80, 0xfe80, 0xf800, 0xf800, 0xfe80, 0xfcb2, 0xf800, 0xf800, 0xf800, 0xf800, 0xf800, 0xf800, 0xf9c7, 0xfe80, 0xfb40, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 
  0xd1b5, 0xd1b5, 0xd1b5, 0xfb40, 0xfb40, 0xfe80, 0xfe80, 0xf8a2, 0xf800, 0xf800, 0xfdf7, 0xfe80, 0xfb40, 0xfe80, 0xf9c7, 0xf800, 0xf800, 0xfdd7, 0xfe80, 0xfe80, 0xf800, 0xf9c7, 0xfe80, 0xfe80, 0xf800, 0xf800, 0xf800, 0xfe80, 0xfe80, 0xf800, 0xf861, 0xfe80, 0xfe80, 0xfe80, 0xf861, 0xf800, 0xfe80, 0xfe80, 0xfe80, 0xfe80, 0xf800, 0xf800, 0xfe80, 0xfe80, 0xfe80, 0xfe80, 0xfe80, 0xfe80, 0xf9c7, 0xf800, 0xf800, 0xfdd7, 0xfe80, 0xfe80, 0xf800, 0xf9c7, 0xfe80, 0xfe80, 0xfe80, 0xfefb, 0xf800, 0xf965, 0xfe80, 0xfe80, 0xfe80, 0xfe80, 0xfb40, 0xfb40, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 
  0xd1b5, 0xd1b5, 0xd1b5, 0xfb40, 0xfe80, 0xfe80, 0xfc30, 0xf800, 0xf800, 0xf800, 0xfd14, 0xfe80, 0xfe80, 0xfe80, 0xf800, 0xf904, 0xf800, 0xfaaa, 0xfe80, 0xfeba, 0xf800, 0xf800, 0xfe80, 0xf800, 0xf800, 0xf800, 0xfe80, 0xfe80, 0xfb40, 0xfe80, 0xf800, 0xfe80, 0xfe80, 0xfe80, 0xf800, 0xf8e3, 0xfe80, 0xfb40, 0xfe80, 0xfe80, 0xf800, 0xf800, 0xfe80, 0xfe80, 0xfb40, 0xfb40, 0xfe80, 0xfe80, 0xf800, 0xf904, 0xf800, 0xfaaa, 0xfe80, 0xfeba, 0xf800, 0xf800, 0xfe80, 0xfb40, 0xfe80, 0xfdf7, 0xf800, 0xf800, 0xfe80, 0xfb40, 0xfb40, 0xfb40, 0xfb40, 0xfb40, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 
  0xd1b5, 0xd1b5, 0xfb40, 0xfb40, 0xfe80, 0xfe80, 0xf800, 0xf800, 0xfe80, 0xf800, 0xf800, 0xfe80, 0xfe80, 0xfe80, 0xf800, 0xfcf3, 0xfb0c, 0xf800, 0xfe9a, 0xfdb6, 0xf800, 0xfdb6, 0xfe80, 0xf800, 0xf800, 0xf800, 0xfe80, 0xfb40, 0xfb40, 0xfe80, 0xfe80, 0xfe80, 0xfe80, 0xfe59, 0xf800, 0xf800, 0xfe80, 0xfb40, 0xfe80, 0xfe38, 0xf800, 0xf800, 0xfe80, 0xfe80, 0xfe80, 0xfe80, 0xfe80, 0xfe38, 0xf800, 0xfcf3, 0xf800, 0xf800, 0xfe9a, 0xfdb6, 0xf800, 0xfdb6, 0xfe80, 0xfb40, 0xfe80, 0xfcd3, 0xf800, 0xf800, 0xfe80, 0xfb40, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 
  0xd1b5, 0xfb40, 0xfb40, 0xfe80, 0xfe80, 0xf800, 0xf800, 0xfe38, 0xfe80, 0xf800, 0xf800, 0xfe80, 0xfe80, 0xfcf3, 0xf800, 0xfe59, 0xfdf7, 0xf800, 0xfc10, 0xfc30, 0xf800, 0xfe80, 0xfe80, 0xf800, 0xf800, 0xf800, 0xfe80, 0xfb40, 0xfb40, 0xfb40, 0xfb40, 0xfb40, 0xfe80, 0xf800, 0xf800, 0xf800, 0xfe80, 0xfb40, 0xfe80, 0xf800, 0xf800, 0xf800, 0xf800, 0xf800, 0xf800, 0xfe38, 0xfe80, 0xfcf3, 0xf800, 0xfe59, 0xf800, 0xf800, 0xfc10, 0xf800, 0xf800, 0xfedb, 0xfe80, 0xfb40, 0xfe80, 0xf800, 0xf800, 0xfe79, 0xfe80, 0xfb40, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 
  0xd1b5, 0xfb40, 0xfe80, 0xfe80, 0xfdd7, 0xf800, 0xfa69, 0xfe80, 0xfb40, 0xf800, 0xf861, 0xfe80, 0xfe80, 0xfb0c, 0xf800, 0xfe80, 0xfe80, 0xf945, 0xf800, 0xf8e3, 0xf800, 0xfe80, 0xfe80, 0xf800, 0xf800, 0xfe80, 0xfe80, 0xfb40, 0xfe80, 0xfe80, 0xfe80, 0xfb40, 0xfe80, 0xf800, 0xf800, 0xf800, 0xfe80, 0xfb40, 0xfe80, 0xf800, 0xf800, 0xf800, 0xfe80, 0xfe80, 0xfe80, 0xfe80, 0xfe80, 0xf800, 0xf800, 0xfe80, 0xfe80, 0xf945, 0xf800, 0xf8e3, 0xf800, 0xfe80, 0xfe80, 0xfe80, 0xfe80, 0xf800, 0xf800, 0xfe80, 0xfe80, 0xfb40, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 
  0xd1b5, 0xfb40, 0xfe80, 0xfe80, 0xf986, 0xf800, 0xf800, 0xf800, 0xf800, 0xf800, 0xf800, 0xfe80, 0xfe80, 0xf800, 0xf9c7, 0xfe80, 0xfe80, 0xfcf3, 0xf800, 0xf800, 0xfb4d, 0xfe80, 0xfe80, 0xf800, 0xf800, 0xf800, 0xfe80, 0xfe80, 0xfe80, 0xf800, 0xfe80, 0xfe80, 0xfe80, 0xf986, 0xf800, 0xfefb, 0xfe80, 0xfb40, 0xfe80, 0xf800, 0xf800, 0xfe80, 0xfe80, 0xfe80, 0xfe80, 0xfe80, 0xfe80, 0xf800, 0xf9c7, 0xfe80, 0xfe80, 0xfcf3, 0xf800, 0xf800, 0xfb4d, 0xfe80, 0xfb40, 0xfe80, 0xfe80, 0xf800, 0xf9a6, 0xfe80, 0xfe80, 0xfb40, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 
  0xd1b5, 0xfb40, 0xfe80, 0xf800, 0xf800, 0xfd75, 0xfe80, 0xfe80, 0xfe80, 0xfa69, 0xf800, 0xfedb, 0xf800, 0xf800, 0xfc30, 0xfe80, 0xfe80, 0xfe80, 0xf800, 0xf800, 0xfd14, 0xfe80, 0xfe80, 0xfc10, 0xf800, 0xf800, 0xf800, 0xf800, 0xf800, 0xf800, 0xfe80, 0xfe80, 0xfe80, 0xf800, 0xf800, 0xfe80, 0xfe80, 0xfe80, 0xfeba, 0xf800, 0xf800, 0xfe80, 0xfe80, 0xfe80, 0xfe80, 0xfe80, 0xf800, 0xf800, 0xfc30, 0xfe80, 0xfb40, 0xff1c, 0xf800, 0xf800, 0xfd14, 0xfe80, 0xfb40, 0xfe80, 0xf800, 0xf800, 0xfc10, 0xfe80, 0xfb40, 0xfb40, 0xfb40, 0xfb40, 0xfb40, 0xfb40, 0xd1b5, 0xd1b5, 0xd1b5, 0xfb40, 0xfb40, 0xfb40, 0xfb40, 0xfb40, 0xfb40, 0xd1b5, 0xd1b5, 0xd1b5, 
  0xd1b5, 0xfb40, 0xfe80, 0xf800, 0xf9c7, 0xfe80, 0xfe80, 0xfe80, 0xfe80, 0xfbae, 0xf800, 0xfe38, 0xf800, 0xf800, 0xfdb6, 0xfe80, 0xfe80, 0xfe80, 0xfb8e, 0xf800, 0xfe59, 0xfe80, 0xfe80, 0xfe80, 0xfd55, 0xfb0c, 0xf8e3, 0xfaaa, 0xf800, 0xfe80, 0xfe80, 0xf800, 0xf800, 0xf800, 0xf800, 0xf800, 0xf800, 0xfe80, 0xfdb6, 0xf800, 0xf800, 0xf800, 0xf800, 0xf800, 0xfb4d, 0xfe80, 0xf800, 0xf800, 0xfdb6, 0xfe80, 0xfb40, 0xfb40, 0xfb8e, 0xf800, 0xfe59, 0xfe80, 0xfb40, 0xfe80, 0xf800, 0xf800, 0xfd75, 0xfe80, 0xfb40, 0xfb40, 0xfe80, 0xfe80, 0xfe80, 0xfb40, 0xfb40, 0xfb40, 0xfb40, 0xfb40, 0xfe80, 0xfe80, 0xfe80, 0xfe80, 0xfb40, 0xfb40, 0xfb40, 0xd1b5, 
  0xd1b5, 0xfb40, 0xfe80, 0xfe80, 0xfe80, 0xfe80, 0xfb40, 0xfb40, 0xfe80, 0xfe80, 0xfe80, 0xfb40, 0xfe80, 0xfe80, 0xfe80, 0xfe80, 0xfe80, 0xfe80, 0xfe80, 0xfe80, 0xfe80, 0xfe80, 0xfe80, 0xfe80, 0xfe80, 0xfe80, 0xfe80, 0xfe80, 0xfe80, 0xfe80, 0xfe80, 0xfe80, 0xfe80, 0xfe80, 0xfe80, 0xfe80, 0xfe80, 0xfe80, 0xfe80, 0xfe80, 0xfe80, 0xfe80, 0xfe80, 0xfe80, 0xfe80, 0xfe80, 0xfe80, 0xfe80, 0xfe80, 0xfe80, 0xfb40, 0xfe80, 0xfe80, 0xfe80, 0xfe80, 0xfe80, 0xfe80, 0xfe80, 0xfe80, 0xfe80, 0xfe80, 0xfe80, 0xfe80, 0xfe80, 0xfe80, 0xfe80, 0xfe80, 0xfe80, 0xfb40, 0xfe80, 0xfe80, 0xfe80, 0xfe80, 0xfe80, 0xfe80, 0xfe80, 0xfe80, 0xfe80, 0xfb40, 0xd1b5, 
  0xd1b5, 0xfb40, 0xfb40, 0xfe80, 0xfe80, 0xfb40, 0xfb40, 0xfb40, 0xfb40, 0xfb40, 0xfe80, 0xfb40, 0xfb40, 0xfe80, 0xfb40, 0xfb40, 0xfb40, 0xfb40, 0xfb40, 0xfe80, 0xfb40, 0xfb40, 0xfb40, 0xfb40, 0xfb40, 0xfe80, 0xfe80, 0xfe80, 0xfb40, 0xfb40, 0xfb40, 0xfb40, 0xfe80, 0xfe80, 0xfb40, 0xfb40, 0xfb40, 0xfb40, 0xfb40, 0xfb40, 0xfb40, 0xfb40, 0xfe80, 0xfc30, 0xf800, 0xf800, 0xfe80, 0xfb40, 0xfb40, 0xfe80, 0xfe80, 0xfe80, 0xfedb, 0xf800, 0xf800, 0xf800, 0xf800, 0xfe9a, 0xfe80, 0xfe80, 0xfe80, 0xfc30, 0xf800, 0xf800, 0xf800, 0xf800, 0xf800, 0xfe00, 0xfe80, 0xfe80, 0xfc30, 0xf800, 0xf800, 0xf800, 0xf800, 0xf800, 0xfdd7, 0xfe80, 0xfb40, 0xd1b5, 
  0xd1b5, 0xd1b5, 0xfb40, 0xfb40, 0xfb40, 0xfb40, 0xd1b5, 0xd1b5, 0xd1b5, 0xfb40, 0xfb40, 0xfb40, 0xfb40, 0xfb40, 0xfb40, 0xd1b5, 0xd1b5, 0xd1b5, 0xfb40, 0xfb40, 0xfb40, 0xd1b5, 0xd1b5, 0xd1b5, 0xfb40, 0xfb40, 0xfb40, 0xfb40, 0xfb40, 0xd1b5, 0xd1b5, 0xfb40, 0xfb40, 0xfb40, 0xfb40, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xfb40, 0xfe80, 0xfe80, 0xf9c7, 0xf800, 0xf800, 0xfe80, 0xfb40, 0xfb40, 0xfe80, 0xfe80, 0xfd34, 0xf800, 0xf800, 0xfe80, 0xfe80, 0xf800, 0xf800, 0xfe38, 0xfe80, 0xfe80, 0xf9c7, 0xf800, 0xfe80, 0xfe80, 0xf800, 0xf800, 0xfaeb, 0xfe80, 0xfe80, 0xf9c7, 0xf800, 0xfe00, 0xfe80, 0xfe80, 0xfe80, 0xfe80, 0xfe80, 0xfb40, 0xd1b5, 
  0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xfb40, 0xfe80, 0xfe80, 0xf800, 0xf800, 0xfe80, 0xfe80, 0xfb40, 0xfb40, 0xfe80, 0xfe38, 0xf800, 0xfbef, 0xf800, 0xfe80, 0xfe80, 0xfdf7, 0xf800, 0xf800, 0xfe80, 0xff3c, 0xf800, 0xf800, 0xfe80, 0xfb40, 0xfe8a, 0xf800, 0xf800, 0xfe40, 0xfde0, 0xf800, 0xf800, 0xfe60, 0xfb40, 0xfb40, 0xfb40, 0xfb40, 0xfb40, 0xfb40, 0xd1b5, 
  0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xfb40, 0xfe80, 0xfe38, 0xf800, 0xfa8a, 0xfe80, 0xfe80, 0xfb40, 0xfe80, 0xfe80, 0xfa8a, 0xf800, 0xfe80, 0xfe80, 0xfe80, 0xfe80, 0xfe79, 0xf800, 0xf945, 0xfe80, 0xfe38, 0xf800, 0xf800, 0xfe80, 0xfb40, 0xfe80, 0xf800, 0xf800, 0xfe80, 0xfe38, 0xf800, 0xfa28, 0xfe80, 0xfe80, 0xfe80, 0xfe80, 0xfe80, 0xfb40, 0xd1b5, 0xd1b5, 
  0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xfb40, 0xfe80, 0xfcf3, 0xf800, 0xfc92, 0xfe80, 0xfb40, 0xfb40, 0xfe80, 0xff5d, 0xf800, 0xf800, 0xfe80, 0xfb40, 0xfb40, 0xfe80, 0xfdd7, 0xf800, 0xf800, 0xfe80, 0xf800, 0xf800, 0xfc10, 0xfe80, 0xfe80, 0xf800, 0xf9c7, 0xfe80, 0xfe80, 0xfcf3, 0xf800, 0xf800, 0xf800, 0xf800, 0xf800, 0xfe38, 0xfe80, 0xfb40, 0xd1b5, 0xd1b5, 
  0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xfb40, 0xfe80, 0xf800, 0xf800, 0xfdd7, 0xfe80, 0xfe80, 0xfb40, 0xfe80, 0xfefb, 0xf800, 0xf800, 0xfe80, 0xfb40, 0xfb40, 0xfe80, 0xfcb2, 0xf800, 0xf800, 0xfe80, 0xf800, 0xf800, 0xf800, 0xf800, 0xf800, 0xf800, 0xfe80, 0xfe80, 0xfe80, 0xfb0c, 0xf800, 0xfe59, 0xfe80, 0xfe80, 0xfe80, 0xfe80, 0xfe80, 0xfb40, 0xd1b5, 0xd1b5, 
  0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xfb40, 0xfb40, 0xfe80, 0xf800, 0xf800, 0xfe80, 0xfe80, 0xfe80, 0xfb40, 0xfe80, 0xff7d, 0xf800, 0xf800, 0xfe80, 0xfe80, 0xfe80, 0xfe80, 0xf8e3, 0xf986, 0xfe80, 0xfe80, 0xf800, 0xf800, 0xfe80, 0xfe80, 0xf904, 0xf800, 0xfe80, 0xfe80, 0xfe80, 0xf800, 0xf800, 0xfe80, 0xfe80, 0xfb40, 0xfb40, 0xfb40, 0xfb40, 0xfb40, 0xd1b5, 0xd1b5, 
  0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xfb40, 0xfe80, 0xfeba, 0xf800, 0xf800, 0xfe80, 0xfe80, 0xfe80, 0xfe80, 0xfe80, 0xfe80, 0xf800, 0xf800, 0xf800, 0xfe80, 0xfe80, 0xf800, 0xf924, 0xfe80, 0xfe80, 0xfeba, 0xf800, 0xfa08, 0xfe80, 0xfe80, 0xfd75, 0xf800, 0xf800, 0xfe80, 0xfeba, 0xf800, 0xf800, 0xfe80, 0xfe80, 0xfe80, 0xfe80, 0xfe80, 0xfb40, 0xd1b5, 0xd1b5, 0xd1b5, 
  0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xfb40, 0xfe80, 0xfdb6, 0xf800, 0xf800, 0xf800, 0xf800, 0xf800, 0xfb8e, 0xfe80, 0xfe80, 0xfe80, 0xfd96, 0xf800, 0xf800, 0xf800, 0xf800, 0xfe80, 0xfe80, 0xfe80, 0xf800, 0xf800, 0xfc92, 0xfe80, 0xfe80, 0xfe80, 0xf800, 0xf800, 0xfe18, 0xfdb6, 0xf800, 0xf800, 0xf800, 0xf800, 0xf800, 0xfb4d, 0xfe80, 0xfb40, 0xd1b5, 0xd1b5, 0xd1b5, 
  0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xfb40, 0xfe80, 0xfe80, 0xfe80, 0xfe80, 0xfe80, 0xfe80, 0xfe80, 0xfe80, 0xfe80, 0xfb40, 0xfe80, 0xfe80, 0xfe80, 0xfe80, 0xfe80, 0xfe80, 0xfe80, 0xfe80, 0xfb40, 0xfe80, 0xfe80, 0xfe80, 0xfe80, 0xfb40, 0xfe80, 0xfe80, 0xfe80, 0xfe80, 0xfe80, 0xfe80, 0xfe80, 0xfe80, 0xfe80, 0xfe80, 0xfe80, 0xfe80, 0xfb40, 0xd1b5, 0xd1b5, 0xd1b5, 
  0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xfb40, 0xfb40, 0xfb40, 0xfb40, 0xfb40, 0xfb40, 0xfb40, 0xfb40, 0xfb40, 0xfb40, 0xfb40, 0xfb40, 0xfb40, 0xfb40, 0xfb40, 0xfb40, 0xfb40, 0xfb40, 0xfb40, 0xfb40, 0xfb40, 0xfb40, 0xfb40, 0xfb40, 0xfb40, 0xfb40, 0xfb40, 0xfb40, 0xfb40, 0xfb40, 0xfb40, 0xfb40, 0xfb40, 0xfb40, 0xfb40, 0xfb40, 0xfb40, 0xfb40, 0xd1b5, 0xd1b5, 0xd1b5, 
  0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 
  0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5
};

const uint16_t IMAGE_VICTORY[] = {
  10,     // frame width
  10,     // frame height
  1,      // number of frames
  1,      // animation speed
  0xf818, // transparent color
  0,      // RGB565 color mode
  // frame 1/1
  0xf818, 0xf818, 0xf818, 0xf818, 0xf818, 0xf818, 0xf818, 0xf818, 0xf818, 0xf818, 
  0xf818, 0xf818, 0xf818, 0xf818, 0xf818, 0xf818, 0xf818, 0xf818, 0xf818, 0xf818, 
  0xf818, 0xf818, 0xf818, 0x3cc1, 0xf818, 0xf818, 0x3cc1, 0xf818, 0xf818, 0xf818, 
  0xf818, 0xf818, 0x3cc1, 0xb382, 0xf818, 0xf818, 0xb382, 0x3cc1, 0xf818, 0xf818, 
  0xf818, 0x3cc1, 0xb382, 0xf818, 0xf818, 0xf818, 0xf818, 0xb382, 0x3cc1, 0xf818, 
  0xf818, 0x3cc1, 0xb382, 0xf818, 0xf818, 0xf818, 0xf818, 0xb382, 0x3cc1, 0xf818, 
  0xf818, 0x3cc1, 0xb382, 0xf818, 0xf818, 0xf818, 0xf818, 0xb382, 0x3cc1, 0xf818, 
  0xf818, 0xf818, 0x3cc1, 0xb382, 0xf818, 0xf818, 0xb382, 0x3cc1, 0xf818, 0xf818, 
  0xf818, 0xf818, 0xf818, 0x3cc1, 0xb382, 0xb382, 0x3cc1, 0xf818, 0xf818, 0xf818, 
  0xf818, 0xf818, 0xf818, 0xb382, 0xf818, 0xf818, 0xb382, 0xf818, 0xf818, 0xf818
};

const uint16_t IMAGE_FAILURE[] = {
  10,     // frame width
  10,     // frame height
  1,      // number of frames
  1,      // animation speed
  0xf818, // transparent color
  0,      // RGB565 color mode
  // frame 1/1
  0xf818, 0xf818, 0xf818, 0xf818, 0xf818, 0xf818, 0xf818, 0xf818, 0xf818, 0xf818, 
  0xf818, 0xf818, 0xf818, 0xffff, 0xffff, 0xffff, 0xffff, 0xf818, 0xf818, 0xf818, 
  0xf818, 0xf818, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xf818, 0xf818, 
  0xf818, 0xf818, 0xffff, 0xf818, 0xffff, 0xffff, 0xf818, 0xffff, 0xf818, 0xf818, 
  0xf818, 0xf818, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xf818, 0xf818, 
  0xf818, 0xf818, 0xf818, 0xffff, 0xffff, 0xffff, 0xffff, 0xf818, 0xf818, 0xf818, 
  0xf818, 0xf818, 0xf818, 0xffff, 0xffff, 0xffff, 0xffff, 0xf818, 0xf818, 0xf818, 
  0xf818, 0xf818, 0xf818, 0xffff, 0xffff, 0xffff, 0xffff, 0xf818, 0xf818, 0xf818, 
  0xf818, 0xf818, 0xf818, 0xf818, 0xf818, 0xf818, 0xf818, 0xf818, 0xf818, 0xf818, 
  0xf818, 0xf818, 0xf818, 0xf818, 0xf818, 0xf818, 0xf818, 0xf818, 0xf818, 0xf818
};

const uint16_t IMAGE_CURSOR[] = {
  5,      // frame width
  3,      // frame height
  1,      // number of frames
  1,      // animation speed
  0xd1b5, // transparent color
  0,      // RGB565 color mode
  // frame 1/1
  0xd1b5, 0x842d, 0xd1b5, 0xd1b5, 0xd1b5, 
  0x842d, 0x842d, 0xffff, 0xffff, 0xffff, 
  0xd1b5, 0x842d, 0xd1b5, 0xd1b5, 0xd1b5
};

//----------------------Level materials---------------
const uint16_t IMAGE_FLOOR1[] = {
    8,      // frame width
  5,      // frame height
  1,      // number of frames
  1,      // animation speed
  0xf81f, // transparent color
  0,      // RGB565 color mode
  // frame 1/1
  0x9bc8, 0x9bc8, 0x9bc8, 0x9bc8, 0x9bc8, 0x9bc8, 0x9bc8, 0x9bc8, 
  0x9bc8, 0x9bc8, 0x9bc8, 0x9bc8, 0x9bc8, 0x9bc8, 0x9bc8, 0x9bc8, 
  0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 
  0x9bc8, 0x9bc8, 0x9bc8, 0x0000, 0x9bc8, 0x9bc8, 0x9bc8, 0x9bc8, 
  0x9bc8, 0x9bc8, 0x9bc8, 0x0000, 0x9bc8, 0x9bc8, 0x9bc8, 0x9bc8
};

const uint16_t IMAGE_WALL1[] = {
  8,      // frame width
  6,      // frame height
  1,      // number of frames
  1,      // animation speed
  0xf81f, // transparent color
  0,      // RGB565 color mode
  // frame 1/1
  0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 
  0xdd09, 0xdd09, 0x0000, 0xdd09, 0xdd09, 0xdd09, 0x0000, 0xdd09, 
  0xdd09, 0xdd09, 0x0000, 0xdd09, 0xdd09, 0xdd09, 0x0000, 0xdd09, 
  0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 
  0x0000, 0xdd09, 0xdd09, 0xdd09, 0x0000, 0xdd09, 0xdd09, 0xdd09, 
  0x0000, 0xdd09, 0xdd09, 0xdd09, 0x0000, 0xdd09, 0xdd09, 0xdd09  
};

const uint16_t IMAGE_WALL2[] = {
  8,      // frame width
  6,      // frame height
  1,      // number of frames
  1,      // animation speed
  0xf81f, // transparent color
  0,      // RGB565 color mode
  // frame 1/1
  0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 
  0x0000, 0x842d, 0x842d, 0x842d, 0x842d, 0x842d, 0x842d, 0x842d, 
  0x0000, 0x842d, 0x842d, 0x842d, 0x842d, 0x842d, 0x842d, 0x842d, 
  0x0000, 0x842d, 0x842d, 0x842d, 0x842d, 0x842d, 0x842d, 0x842d, 
  0x0000, 0x842d, 0x842d, 0x842d, 0x842d, 0x842d, 0x842d, 0x842d, 
  0x0000, 0x842d, 0x842d, 0x842d, 0x842d, 0x842d, 0x842d, 0x842d
};

const uint16_t IMAGE_WALL3[] = {
  8,      // frame width
  6,      // frame height
  1,      // number of frames
  1,      // animation speed
  0xf81f, // transparent color
  0,      // RGB565 color mode
  // frame 1/1
  0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 
  0x842d, 0x842d, 0x842d, 0x0000, 0x842d, 0x842d, 0x842d, 0x842d, 
  0x842d, 0x842d, 0x842d, 0x0000, 0x842d, 0x842d, 0x842d, 0x842d, 
  0x842d, 0x842d, 0x842d, 0x0000, 0x842d, 0x842d, 0x842d, 0x842d, 
  0x842d, 0x842d, 0x842d, 0x0000, 0x842d, 0x842d, 0x842d, 0x842d, 
  0x842d, 0x842d, 0x842d, 0x0000, 0x842d, 0x842d, 0x842d, 0x842d
};

const uint16_t IMAGE_BARS[] = {
  8,      // frame width
  6,      // frame height
  1,      // number of frames
  1,      // animation speed
  0xf81f, // transparent color
  0,      // RGB565 color mode
  // frame 1/1
  0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 
  0xdd09, 0xdd09, 0xdd09, 0xdd09, 0xdd09, 0xdd09, 0xdd09, 0xdd09, 
  0xdd09, 0xdd09, 0xdd09, 0x842d, 0x0000, 0xdd09, 0xdd09, 0xdd09, 
  0xdd09, 0x842d, 0x0000, 0x842d, 0x0000, 0x842d, 0x0000, 0xdd09, 
  0x0000, 0x842d, 0x0000, 0x842d, 0x0000, 0x842d, 0x0000, 0x842d, 
  0x0000, 0x842d, 0x0000, 0x842d, 0x0000, 0x842d, 0x0000, 0x842d
};

const uint16_t IMAGE_HOLE[] = {
  8,      // frame width
  6,      // frame height
  1,      // number of frames
  1,      // animation speed
  0xf81f, // transparent color
  0,      // RGB565 color mode
  // frame 1/1
  0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 
  0xdd09, 0xdd09, 0xdd09, 0xdd09, 0xdd09, 0xdd09, 0xdd09, 0x0000, 
  0xdd09, 0xdd09, 0xdd09, 0x0000, 0x0000, 0xdd09, 0xdd09, 0x0000, 
  0x0000, 0xdd09, 0x0000, 0x0000, 0x0000, 0x0000, 0xdd09, 0x0000, 
  0x0000, 0xdd09, 0x0000, 0x0000, 0x0000, 0x0000, 0xdd09, 0xdd09, 
  0x0000, 0xdd09, 0xdd09, 0xdd09, 0xdd09, 0xdd09, 0xdd09, 0xdd09
};

const uint16_t IMAGE_GATE[] = {
  8,      // frame width
  24,     // frame height
  2,      // number of frames
  2,      // animation speed
  0xf818, // transparent color
  0,      // RGB565 color mode
  // frame 1/2
  0x3941, 0x3941, 0x3941, 0x3941, 0x3941, 0x3941, 0xf818, 0xf818, 
  0x3941, 0x5204, 0x5204, 0x5204, 0x5204, 0x3941, 0xf818, 0xf818, 
  0x3941, 0x5204, 0xffe0, 0x5204, 0x5204, 0x3941, 0xf818, 0xf818, 
  0x3941, 0x5204, 0xffe0, 0x5204, 0x5204, 0x3941, 0xf818, 0xf818, 
  0x3941, 0x5204, 0x5204, 0xffe0, 0x5204, 0x3941, 0xf818, 0xf818, 
  0x3941, 0x5204, 0x5204, 0x5204, 0x5204, 0x3941, 0xf818, 0xf818, 
  0x3941, 0x5204, 0xffe0, 0x5204, 0x5204, 0x3941, 0xf818, 0xf818, 
  0x3941, 0x5204, 0xffe0, 0xffe0, 0x5204, 0x3941, 0xf818, 0xf818, 
  0x3941, 0x5204, 0xffe0, 0x5204, 0x5204, 0x3941, 0xf818, 0xf818, 
  0x3941, 0x5204, 0x5204, 0x5204, 0x5204, 0x3941, 0xf818, 0xf818, 
  0x3941, 0x5204, 0xffe0, 0x5204, 0x5204, 0x3941, 0xf818, 0xf818, 
  0x3941, 0x5204, 0x5204, 0xffe0, 0x5204, 0x3941, 0xf818, 0xf818, 
  0x3941, 0x5204, 0xffe0, 0x5204, 0x5204, 0x3941, 0xf818, 0xf818, 
  0x3941, 0x5204, 0x5204, 0x5204, 0x5204, 0x3941, 0xf818, 0xf818, 
  0x3941, 0x5204, 0x5204, 0xffe0, 0x5204, 0x3941, 0xf818, 0xf818, 
  0x3941, 0x5204, 0xffe0, 0xffe0, 0x5204, 0x3941, 0xf818, 0xf818, 
  0x3941, 0x5204, 0xffe0, 0x5204, 0x5204, 0x3941, 0xf818, 0xf818, 
  0x3941, 0x5204, 0x5204, 0x5204, 0x5204, 0x3941, 0xf818, 0xf818, 
  0x3941, 0x5204, 0xffe0, 0x5204, 0x5204, 0x3941, 0xf818, 0xf818, 
  0x3941, 0x5204, 0x5204, 0xffe0, 0x5204, 0x3941, 0xf818, 0xf818, 
  0x3941, 0x5204, 0x5204, 0xffe0, 0x5204, 0x3941, 0xf818, 0xf818, 
  0x3941, 0x5204, 0x5204, 0x5204, 0x5204, 0x3941, 0xf818, 0xf818, 
  0x3941, 0x5204, 0x5204, 0x5204, 0x5204, 0x3941, 0xf818, 0xf818, 
  0x3941, 0x3941, 0x3941, 0x3941, 0x3941, 0x3941, 0xf818, 0xf818, 
  // frame 2/2
  0x3941, 0x3941, 0x3941, 0x3941, 0x3941, 0x3941, 0xf818, 0xf818, 
  0x3941, 0x5204, 0x5204, 0x5204, 0x5204, 0x3941, 0xf818, 0xf818, 
  0x3941, 0x5204, 0xf800, 0x5204, 0x5204, 0x3941, 0xf818, 0xf818, 
  0x3941, 0x5204, 0xf800, 0x5204, 0x5204, 0x3941, 0xf818, 0xf818, 
  0x3941, 0x5204, 0x5204, 0xf800, 0x5204, 0x3941, 0xf818, 0xf818, 
  0x3941, 0x5204, 0x5204, 0x5204, 0x5204, 0x3941, 0xf818, 0xf818, 
  0x3941, 0x5204, 0xf800, 0x5204, 0x5204, 0x3941, 0xf818, 0xf818, 
  0x3941, 0x5204, 0xf800, 0xf800, 0x5204, 0x3941, 0xf818, 0xf818, 
  0x3941, 0x5204, 0xf800, 0x5204, 0x5204, 0x3941, 0xf818, 0xf818, 
  0x3941, 0x5204, 0x5204, 0x5204, 0x5204, 0x3941, 0xf818, 0xf818, 
  0x3941, 0x5204, 0xf800, 0x5204, 0x5204, 0x3941, 0xf818, 0xf818, 
  0x3941, 0x5204, 0x5204, 0xf800, 0x5204, 0x3941, 0xf818, 0xf818, 
  0x3941, 0x5204, 0xf800, 0x5204, 0x5204, 0x3941, 0xf818, 0xf818, 
  0x3941, 0x5204, 0x5204, 0x5204, 0x5204, 0x3941, 0xf818, 0xf818, 
  0x3941, 0x5204, 0x5204, 0xf800, 0x5204, 0x3941, 0xf818, 0xf818, 
  0x3941, 0x5204, 0xf800, 0xf800, 0x5204, 0x3941, 0xf818, 0xf818, 
  0x3941, 0x5204, 0xf800, 0x5204, 0x5204, 0x3941, 0xf818, 0xf818, 
  0x3941, 0x5204, 0x5204, 0x5204, 0x5204, 0x3941, 0xf818, 0xf818, 
  0x3941, 0x5204, 0xf800, 0x5204, 0x5204, 0x3941, 0xf818, 0xf818, 
  0x3941, 0x5204, 0x5204, 0xf800, 0x5204, 0x3941, 0xf818, 0xf818, 
  0x3941, 0x5204, 0x5204, 0xf800, 0x5204, 0x3941, 0xf818, 0xf818, 
  0x3941, 0x5204, 0x5204, 0x5204, 0x5204, 0x3941, 0xf818, 0xf818, 
  0x3941, 0x5204, 0x5204, 0x5204, 0x5204, 0x3941, 0xf818, 0xf818, 
  0x3941, 0x3941, 0x3941, 0x3941, 0x3941, 0x3941, 0xf818, 0xf818
};

const uint16_t IMAGE_WOOD_CENTER[] = {
  8,      // frame width
  6,      // frame height
  1,      // number of frames
  1,      // animation speed
  0xd1b5, // transparent color
  0,      // RGB565 color mode
  // frame 1/1
  0xb382, 0xb382, 0xb382, 0xb382, 0xb382, 0xb382, 0xb382, 0xb382, 
  0xb382, 0xb382, 0xb382, 0xb382, 0xb382, 0xb382, 0xb382, 0xb382, 
  0xb382, 0xb382, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xb382, 0xb382, 
  0xd1b5, 0xb382, 0xb382, 0xd1b5, 0xd1b5, 0xb382, 0xb382, 0xd1b5, 
  0xd1b5, 0xd1b5, 0xb382, 0xb382, 0xb382, 0xb382, 0xd1b5, 0xd1b5, 
  0xd1b5, 0xd1b5, 0xd1b5, 0xb382, 0xb382, 0xd1b5, 0xd1b5, 0xd1b5
};

const uint16_t IMAGE_WOOD_LEFT_CORNER[] = {
  8,      // frame width
  6,      // frame height
  1,      // number of frames
  1,      // animation speed
  0xd1b5, // transparent color
  0,      // RGB565 color mode
  // frame 1/1
  0xb382, 0xb382, 0xb382, 0xb382, 0xb382, 0xb382, 0xb382, 0xb382, 
  0xb382, 0xb382, 0xb382, 0xb382, 0xb382, 0xb382, 0xb382, 0xb382, 
  0xb382, 0xb382, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xb382, 0xb382, 
  0xb382, 0xb382, 0xd1b5, 0xd1b5, 0xd1b5, 0xb382, 0xb382, 0xd1b5, 
  0xb382, 0xb382, 0xd1b5, 0xd1b5, 0xb382, 0xb382, 0xd1b5, 0xd1b5, 
  0xb382, 0xb382, 0xb382, 0xb382, 0xb382, 0xd1b5, 0xd1b5, 0xd1b5
};

const uint16_t IMAGE_WOOD_RIGHT_CORNER[] = {
  8,      // frame width
  6,      // frame height
  1,      // number of frames
  1,      // animation speed
  0xd1b5, // transparent color
  0,      // RGB565 color mode
  // frame 1/1
  0xb382, 0xb382, 0xb382, 0xb382, 0xb382, 0xb382, 0xb382, 0xb382, 
  0xb382, 0xb382, 0xb382, 0xb382, 0xb382, 0xb382, 0xb382, 0xb382, 
  0xb382, 0xb382, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xb382, 0xb382, 
  0xd1b5, 0xb382, 0xb382, 0xd1b5, 0xd1b5, 0xd1b5, 0xb382, 0xb382, 
  0xd1b5, 0xd1b5, 0xb382, 0xb382, 0xd1b5, 0xd1b5, 0xb382, 0xb382, 
  0xd1b5, 0xd1b5, 0xd1b5, 0xb382, 0xb382, 0xb382, 0xb382, 0xb382
};
const uint16_t IMAGE_WOOD_PILLAR_CENTER[] = {
  8,      // frame width
  6,      // frame height
  1,      // number of frames
  1,      // animation speed
  0xd1b5, // transparent color
  0,      // RGB565 color mode
  // frame 1/1
  0xd1b5, 0xd1b5, 0xd1b5, 0xb382, 0xb382, 0xd1b5, 0xd1b5, 0xd1b5, 
  0xd1b5, 0xd1b5, 0xd1b5, 0xb382, 0xb382, 0xd1b5, 0xd1b5, 0xd1b5, 
  0xd1b5, 0xd1b5, 0xd1b5, 0xb382, 0xb382, 0xd1b5, 0xd1b5, 0xd1b5, 
  0xd1b5, 0xd1b5, 0xd1b5, 0xb382, 0xb382, 0xd1b5, 0xd1b5, 0xd1b5, 
  0xd1b5, 0xd1b5, 0xd1b5, 0xb382, 0xb382, 0xd1b5, 0xd1b5, 0xd1b5, 
  0xd1b5, 0xd1b5, 0xd1b5, 0xb382, 0xb382, 0xd1b5, 0xd1b5, 0xd1b5
};

const uint16_t IMAGE_WOOD_PILLAR_LEFT[] = {
  8,      // frame width
  6,      // frame height
  1,      // number of frames
  1,      // animation speed
  0xd1b5, // transparent color
  0,      // RGB565 color mode
  // frame 1/1
  0xb382, 0xb382, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 
  0xb382, 0xb382, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 
  0xb382, 0xb382, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 
  0xb382, 0xb382, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 
  0xb382, 0xb382, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 
  0xb382, 0xb382, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5
};

const uint16_t IMAGE_WOOD_PILLAR_RIGHT[] = {
  8,      // frame width
  6,      // frame height
  1,      // number of frames
  1,      // animation speed
  0xd1b5, // transparent color
  0,      // RGB565 color mode
  // frame 1/1
  0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xb382, 0xb382, 
  0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xb382, 0xb382, 
  0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xb382, 0xb382, 
  0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xb382, 0xb382, 
  0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xb382, 0xb382, 
  0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xb382, 0xb382
};

const uint16_t IMAGE_WOOD_UP[] = {
  8,      // frame width
  6,      // frame height
  1,      // number of frames
  1,      // animation speed
  0xd1b5, // transparent color
  0,      // RGB565 color mode
  // frame 1/1
  0xb382, 0xb382, 0xb382, 0xb382, 0xb382, 0xb382, 0xb382, 0xb382, 
  0xb382, 0xb382, 0xb382, 0xb382, 0xb382, 0xb382, 0xb382, 0xb382, 
  0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 
  0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 
  0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 
  0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5
};

const uint16_t IMAGE_LADDER1[] = {
  8,      // frame width
  6,      // frame height
  1,      // number of frames
  1,      // animation speed
  0xf81f, // transparent color
  0,      // RGB565 color mode
  // frame 1/1
  0x2b4f, 0x2b4f, 0x2b4f, 0x2b4f, 0x2b4f, 0x2b4f, 0x2b4f, 0x2b4f, 
  0x2b4f, 0x0a0a, 0x0a0a, 0x0a0a, 0x0a0a, 0x0a0a, 0x0a0a, 0x2b4f, 
  0x2b4f, 0x2b4f, 0x2b4f, 0x2b4f, 0x2b4f, 0x2b4f, 0x2b4f, 0x2b4f, 
  0x2b4f, 0x0a0a, 0x0a0a, 0x0a0a, 0x0a0a, 0x0a0a, 0x0a0a, 0x2b4f, 
  0x2b4f, 0x2b4f, 0x2b4f, 0x2b4f, 0x2b4f, 0x2b4f, 0x2b4f, 0x2b4f, 
  0x2b4f, 0x0a0a, 0x0a0a, 0x0a0a, 0x0a0a, 0x0a0a, 0x0a0a, 0x2b4f
};

const uint16_t IMAGE_LADDER1E[] = {
  8,      // frame width
  5,      // frame height
  1,      // number of frames
  1,      // animation speed
  0xf81f, // transparent color
  0,      // RGB565 color mode
  // frame 1/1
  0x2b4f, 0x2b4f, 0x2b4f, 0x2b4f, 0x2b4f, 0x2b4f, 0x2b4f, 0x2b4f, 
  0x2b4f, 0x0a0a, 0x0a0a, 0x0a0a, 0x0a0a, 0x0a0a, 0x0a0a, 0x2b4f, 
  0x2b4f, 0x2b4f, 0x2b4f, 0x2b4f, 0x2b4f, 0x2b4f, 0x2b4f, 0x2b4f, 
  0x2b4f, 0x0a0a, 0x0a0a, 0x0a0a, 0x0a0a, 0x0a0a, 0x0a0a, 0x2b4f, 
  0x2b4f, 0x2b4f, 0x2b4f, 0x2b4f, 0x2b4f, 0x2b4f, 0x2b4f, 0x2b4f
};

const uint16_t IMAGE_DIAMOND_DOWN[] = {
  8,      // frame width
  6,      // frame height
  1,      // number of frames
  1,      // animation speed
  0xd1b5, // transparent color
  0,      // RGB565 color mode
  // frame 1/1
  0xd1b5, 0xceea, 0xe7e0, 0xffff, 0xffff, 0xe7e0, 0xceea, 0xd1b5, 
  0xd1b5, 0xd1b5, 0xceea, 0xe7e0, 0xe7e0, 0xceea, 0xd1b5, 0xd1b5, 
  0xd1b5, 0xd1b5, 0xd1b5, 0xceea, 0xceea, 0xd1b5, 0xd1b5, 0xd1b5, 
  0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 
  0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 
  0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5
};

const uint16_t IMAGE_DIAMOND_UP[] = {
  8,      // frame width
  6,      // frame height
  1,      // number of frames
  1,      // animation speed
  0xd1b5, // transparent color
  0,      // RGB565 color mode
  // frame 1/1
  0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 
  0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 
  0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 
  0xd1b5, 0xd1b5, 0xd1b5, 0xceea, 0xceea, 0xd1b5, 0xd1b5, 0xd1b5, 
  0xd1b5, 0xd1b5, 0xceea, 0xe7e0, 0xe7e0, 0xceea, 0xd1b5, 0xd1b5, 
  0xd1b5, 0xceea, 0xe7e0, 0xfeff, 0xfeff, 0xe7e0, 0xceea, 0xd1b5
};

const uint16_t IMAGE_CUP_BASE[] = {
  8,      // frame width
  6,      // frame height
  1,      // number of frames
  1,      // animation speed
  0xd1b5, // transparent color
  0,      // RGB565 color mode
  // frame 1/1
  0xd1b5, 0xe7e0, 0xceea, 0xceea, 0xceea, 0xceea, 0xe7e0, 0xd1b5, 
  0xd1b5, 0xe7e0, 0xe7e0, 0xceea, 0xceea, 0xe7e0, 0xe7e0, 0xd1b5, 
  0xd1b5, 0xd1b5, 0xe7e0, 0x191f, 0x191f, 0xe7e0, 0xd1b5, 0xd1b5, 
  0xd1b5, 0xd1b5, 0xd1b5, 0xe7e0, 0xe7e0, 0xd1b5, 0xd1b5, 0xd1b5, 
  0xd1b5, 0xd1b5, 0xd1b5, 0xe7e0, 0xe7e0, 0xd1b5, 0xd1b5, 0xd1b5, 
  0xd1b5, 0xd1b5, 0xe7e0, 0xceea, 0xceea, 0xe7e0, 0xd1b5, 0xd1b5
};

const uint16_t IMAGE_CUP_UP[] = {
  8,      // frame width
  6,      // frame height
  1,      // number of frames
  1,      // animation speed
  0xd1b5, // transparent color
  0,      // RGB565 color mode
  // frame 1/1
  0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 
  0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 
  0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 
  0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 
  0xd1b5, 0xe7e0, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xe7e0, 0xd1b5, 
  0xd1b5, 0xe7e0, 0xceea, 0xceea, 0xceea, 0xceea, 0xe7e0, 0xd1b5
};

const uint16_t IMAGE_POWER_BASE[] = {
  8,      // frame width
  6,      // frame height
  1,      // number of frames
  1,      // animation speed
  0xd1b5, // transparent color
  0,      // RGB565 color mode
  // frame 1/1
  0xd1b5, 0x191f, 0x190c, 0x191f, 0x191f, 0x190c, 0x191f, 0xd1b5, 
  0xd1b5, 0xd1b5, 0x191f, 0x190c, 0x190c, 0x191f, 0xd1b5, 0xd1b5, 
  0xd1b5, 0xd1b5, 0xd1b5, 0x191f, 0x191f, 0xd1b5, 0xd1b5, 0xd1b5, 
  0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 
  0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 
  0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5
};

const uint16_t IMAGE_POWER_UP[] = {
  8,      // frame width
  6,      // frame height
  1,      // number of frames
  1,      // animation speed
  0xd1b5, // transparent color
  0,      // RGB565 color mode
  // frame 1/1
  0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 
  0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 
  0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 
  0xd1b5, 0xd1b5, 0xd1b5, 0x191f, 0x191f, 0xd1b5, 0xd1b5, 0xd1b5, 
  0xd1b5, 0xd1b5, 0x191f, 0x190c, 0x190c, 0x191f, 0xd1b5, 0xd1b5, 
  0xd1b5, 0x191f, 0x190c, 0x191f, 0x191f, 0x190c, 0x191f, 0xd1b5
};

Image Gate(IMAGE_GATE);

//----------------------GUI Images------------
const uint16_t IMAGE_SKULL[] = {
  5,      // frame width
  4,      // frame height
  1,      // number of frames
  1,      // animation speed
  0xf81f, // transparent color
  0,      // RGB565 color mode
  // frame 1/1
  0x0000, 0xf7ba, 0xf7ba, 0xf7ba, 0x0000, 
  0xf7ba, 0x0000, 0xf7ba, 0x0000, 0xf7ba, 
  0xf7ba, 0xf7ba, 0xf7ba, 0xf7ba, 0xf7ba, 
  0x0000, 0xf7ba, 0xf7ba, 0xf7ba, 0x0000
};

const uint16_t IMAGE_KEY[] = {
  5,      // frame width
  5,      // frame height
  1,      // number of frames
  1,      // animation speed
  0xf81f, // transparent color
  0,      // RGB565 color mode
  // frame 1/1
  0x0000, 0xffe0, 0xffe0, 0xffe0, 0x0000, 
  0xffe0, 0x0000, 0x0000, 0x0000, 0xffe0, 
  0x0000, 0xffe0, 0xffe0, 0xffe0, 0x0000, 
  0x0000, 0x0000, 0xffe0, 0x0000, 0x0000, 
  0x0000, 0x0000, 0xffe0, 0xffe0, 0x0000
};

const uint16_t IMAGE_HEALTH[] = {
  5,      // frame width
  5,      // frame height
  1,      // number of frames
  1,      // animation speed
  0xf81f, // transparent color
  0,      // RGB565 color mode
  // frame 1/1
  0x0000, 0xf800, 0x0000, 0xf800, 0x0000, 
  0xf800, 0xf800, 0xf800, 0xf800, 0xf800, 
  0x0000, 0xf800, 0xf800, 0xf800, 0x0000, 
  0x0000, 0x0000, 0xf800, 0x0000, 0x0000, 
  0x0000, 0x0000, 0x0000, 0x0000, 0x0000
};

const uint16_t IMAGE_POWER[] = {
  4,      // frame width
  6,      // frame height
  1,      // number of frames
  1,      // animation speed
  0xf81f, // transparent color
  0,      // RGB565 color mode
  // frame 1/1
  0x0000, 0x0000, 0x0000, 0x0000, 
  0x2b4f, 0x0000, 0x0000, 0x2b4f, 
  0x0000, 0x2b4f, 0x2b4f, 0x0000, 
  0x0000, 0x2b4f, 0x2b4f, 0x0000, 
  0x2b4f, 0x0000, 0x0000, 0x2b4f, 
  0x0000, 0x0000, 0x0000, 0x0000
};

const uint16_t IMAGE_HBAR[] = {
  2,      // frame width
  2,      // frame height
  1,      // number of frames
  1,      // animation speed
  0xf81f, // transparent color
  0,      // RGB565 color mode
  // frame 1/1
  0xf800, 0xf800,
  0xf800, 0xf800
};

const uint16_t IMAGE_EBAR[] = {
  3,      // frame width
  2,      // frame height
  1,      // number of frames
  1,      // animation speed
  0xf81f, // transparent color
  0,      // RGB565 color mode
  // frame 1/1
  0xffff, 0xffff, 0xffff,
  0xffff, 0xffff, 0xffff
};

//----------------------Player animations-----
const uint16_t IMAGE_MOVING_LADDER[] = {
  7,      // frame width
  10,     // frame height
  4,      // number of frames
  4,      // animation speed
  0xd1b5, // transparent color
  0,      // RGB565 color mode
  // frame 1/4
  0xd1b5, 0xd1b5, 0x191f, 0x191f, 0x191f, 0xd1b5, 0xd1b5, 
  0xd1b5, 0x190c, 0x190c, 0x190c, 0x190c, 0x190c, 0xd1b5, 
  0xd1b5, 0xd1b5, 0xfeff, 0xfeff, 0xfeff, 0xd1b5, 0xd1b5, 
  0x190c, 0x842d, 0x191f, 0x191f, 0x191f, 0x842d, 0x190c, 
  0x842d, 0x842d, 0x191f, 0x842d, 0x191f, 0x842d, 0x842d, 
  0xd1b5, 0x191f, 0x842d, 0x842d, 0x842d, 0x191f, 0xd1b5, 
  0x190c, 0x3900, 0x3900, 0x3900, 0x3900, 0x3900, 0x190c, 
  0x842d, 0x842d, 0x842d, 0xd1b5, 0x842d, 0x842d, 0x842d, 
  0x190c, 0x842d, 0xd1b5, 0xd1b5, 0xd1b5, 0x842d, 0x190c, 
  0xd1b5, 0x59c1, 0x59c1, 0xd1b5, 0x59c1, 0x59c1, 0xd1b5, 
  // frame 2/4
  0xd1b5, 0xd1b5, 0x191f, 0x191f, 0x191f, 0xd1b5, 0xd1b5, 
  0xd1b5, 0x190c, 0x190c, 0x190c, 0x190c, 0x190c, 0xd1b5, 
  0xd1b5, 0xd1b5, 0xfeff, 0xfeff, 0xfeff, 0xd1b5, 0x842d, 
  0x190c, 0x842d, 0x191f, 0x191f, 0x191f, 0x842d, 0x190c, 
  0x842d, 0x842d, 0x191f, 0x842d, 0x191f, 0x842d, 0xd1b5, 
  0xd1b5, 0x191f, 0x842d, 0x842d, 0x842d, 0x191f, 0xd1b5, 
  0x190c, 0x3900, 0x3900, 0x3900, 0x3900, 0x3900, 0x190c, 
  0x842d, 0x842d, 0x842d, 0xd1b5, 0x842d, 0x842d, 0x842d, 
  0x190c, 0x842d, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 
  0xd1b5, 0x59c1, 0x59c1, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 
  // frame 3/4
  0xd1b5, 0xd1b5, 0x191f, 0x191f, 0x191f, 0xd1b5, 0xd1b5, 
  0xd1b5, 0x190c, 0x190c, 0x190c, 0x190c, 0x190c, 0xd1b5, 
  0xd1b5, 0xd1b5, 0xfeff, 0xfeff, 0xfeff, 0xd1b5, 0xd1b5, 
  0x190c, 0x842d, 0x191f, 0x191f, 0x191f, 0x842d, 0x190c, 
  0x842d, 0x842d, 0x191f, 0x842d, 0x191f, 0x842d, 0x842d, 
  0xd1b5, 0x191f, 0x842d, 0x842d, 0x842d, 0x191f, 0xd1b5, 
  0x190c, 0x3900, 0x3900, 0x3900, 0x3900, 0x3900, 0x190c, 
  0x842d, 0x842d, 0x842d, 0xd1b5, 0x842d, 0x842d, 0x842d, 
  0x190c, 0x842d, 0xd1b5, 0xd1b5, 0xd1b5, 0x842d, 0x190c, 
  0xd1b5, 0x59c1, 0x59c1, 0xd1b5, 0x59c1, 0x59c1, 0xd1b5, 
  // frame 4/4
  0xd1b5, 0xd1b5, 0x191f, 0x191f, 0x191f, 0xd1b5, 0xd1b5, 
  0xd1b5, 0x190c, 0x190c, 0x190c, 0x190c, 0x190c, 0xd1b5, 
  0x842d, 0xd1b5, 0xfeff, 0xfeff, 0xfeff, 0xd1b5, 0xd1b5, 
  0x190c, 0x842d, 0x191f, 0x191f, 0x191f, 0x842d, 0x190c, 
  0xd1b5, 0x842d, 0x191f, 0x842d, 0x191f, 0x842d, 0x842d, 
  0xd1b5, 0x191f, 0x842d, 0x842d, 0x842d, 0x191f, 0xd1b5, 
  0x190c, 0x3900, 0x3900, 0x3900, 0x3900, 0x3900, 0x190c, 
  0x842d, 0x842d, 0x842d, 0xd1b5, 0x842d, 0x842d, 0x842d, 
  0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0x842d, 0x190c, 
  0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0x59c1, 0x59c1, 0xd1b5
};

const uint16_t IMAGE_MOVING_RIGHT[] = {
  7,      // frame width
  10,     // frame height
  4,      // number of frames
  4,      // animation speed
  0xd1b5, // transparent color
  0,      // RGB565 color mode
  // frame 1/4
  0xd1b5, 0xd1b5, 0x191f, 0x191f, 0x190c, 0x190c, 0xd1b5, 
  0xd1b5, 0x190c, 0x190c, 0x190c, 0xfeff, 0xd1b5, 0xd1b5, 
  0xd1b5, 0xd1b5, 0x191f, 0xfeff, 0xfeff, 0xd1b5, 0xd1b5, 
  0xd1b5, 0xd1b5, 0xd1b5, 0x191f, 0x191f, 0xd1b5, 0xd1b5, 
  0xd1b5, 0xd1b5, 0x191f, 0x842d, 0x191f, 0xd1b5, 0xd1b5, 
  0xd1b5, 0xd1b5, 0x191f, 0x842d, 0x191f, 0xd1b5, 0xd1b5, 
  0xd1b5, 0xd1b5, 0x3900, 0x842d, 0x3900, 0xd1b5, 0xd1b5, 
  0xd1b5, 0xd1b5, 0x842d, 0x190c, 0x842d, 0xd1b5, 0xd1b5, 
  0xd1b5, 0xd1b5, 0x842d, 0x842d, 0xd1b5, 0xd1b5, 0xd1b5, 
  0xd1b5, 0xd1b5, 0x59c1, 0x59c1, 0x59c1, 0xd1b5, 0xd1b5, 
  // frame 2/4
  0xd1b5, 0xd1b5, 0x191f, 0x191f, 0x190c, 0x190c, 0xd1b5, 
  0xd1b5, 0x190c, 0x190c, 0x190c, 0xfeff, 0xd1b5, 0xd1b5, 
  0xd1b5, 0xd1b5, 0x191f, 0xfeff, 0xfeff, 0xd1b5, 0xd1b5, 
  0xd1b5, 0xd1b5, 0xd1b5, 0x191f, 0x191f, 0xd1b5, 0xd1b5, 
  0xd1b5, 0xd1b5, 0x191f, 0x842d, 0x191f, 0xd1b5, 0xd1b5, 
  0xd1b5, 0xd1b5, 0x842d, 0x191f, 0x191f, 0xd1b5, 0xd1b5, 
  0xd1b5, 0x842d, 0x3900, 0x3900, 0x3900, 0x842d, 0xd1b5, 
  0x190c, 0x59c1, 0x842d, 0x842d, 0x842d, 0xd1b5, 0x190c, 
  0xd1b5, 0x59c1, 0xd1b5, 0x842d, 0x842d, 0xd1b5, 0xd1b5, 
  0xd1b5, 0x59c1, 0xd1b5, 0x59c1, 0x59c1, 0x59c1, 0xd1b5, 
  // frame 3/4
  0xd1b5, 0xd1b5, 0x191f, 0x191f, 0x190c, 0x190c, 0xd1b5, 
  0xd1b5, 0x190c, 0x190c, 0x190c, 0xfeff, 0xd1b5, 0xd1b5, 
  0xd1b5, 0xd1b5, 0x191f, 0xfeff, 0xfeff, 0xd1b5, 0xd1b5, 
  0xd1b5, 0xd1b5, 0xd1b5, 0x191f, 0x191f, 0xd1b5, 0xd1b5, 
  0xd1b5, 0xd1b5, 0x191f, 0x842d, 0x191f, 0xd1b5, 0xd1b5, 
  0xd1b5, 0xd1b5, 0x191f, 0x842d, 0x191f, 0xd1b5, 0xd1b5, 
  0xd1b5, 0xd1b5, 0x3900, 0x842d, 0x3900, 0xd1b5, 0xd1b5, 
  0xd1b5, 0xd1b5, 0x842d, 0x190c, 0x842d, 0xd1b5, 0xd1b5, 
  0xd1b5, 0xd1b5, 0x842d, 0x842d, 0xd1b5, 0xd1b5, 0xd1b5, 
  0xd1b5, 0xd1b5, 0x59c1, 0x59c1, 0x59c1, 0xd1b5, 0xd1b5, 
  // frame 4/4
  0xd1b5, 0xd1b5, 0x191f, 0x191f, 0x190c, 0x190c, 0xd1b5, 
  0xd1b5, 0x190c, 0x190c, 0x190c, 0xfeff, 0xd1b5, 0xd1b5, 
  0xd1b5, 0xd1b5, 0x191f, 0xfeff, 0xfeff, 0xd1b5, 0xd1b5, 
  0xd1b5, 0xd1b5, 0xd1b5, 0x191f, 0x191f, 0xd1b5, 0xd1b5, 
  0xd1b5, 0xd1b5, 0x191f, 0x842d, 0x191f, 0xd1b5, 0xd1b5, 
  0xd1b5, 0xd1b5, 0x191f, 0x191f, 0x842d, 0xd1b5, 0xd1b5, 
  0xd1b5, 0x842d, 0x3900, 0x3900, 0x3900, 0x842d, 0xd1b5, 
  0x190c, 0x59c1, 0x842d, 0x842d, 0x842d, 0xd1b5, 0x190c, 
  0xd1b5, 0x59c1, 0xd1b5, 0x842d, 0x842d, 0xd1b5, 0xd1b5, 
  0xd1b5, 0x59c1, 0xd1b5, 0x59c1, 0x59c1, 0x59c1, 0xd1b5
};

const uint16_t IMAGE_MOVING_LEFT[] = {
  7,      // frame width
  10,     // frame height
  4,      // number of frames
  4,      // animation speed
  0xd1b5, // transparent color
  0,      // RGB565 color mode
  // frame 1/4
  0xd1b5, 0x190c, 0x190c, 0x191f, 0x191f, 0xd1b5, 0xd1b5, 
  0xd1b5, 0xd1b5, 0xfeff, 0x190c, 0x190c, 0x190c, 0xd1b5, 
  0xd1b5, 0xd1b5, 0xfeff, 0xfeff, 0x191f, 0xd1b5, 0xd1b5, 
  0xd1b5, 0xd1b5, 0x191f, 0x191f, 0xd1b5, 0xd1b5, 0xd1b5, 
  0xd1b5, 0xd1b5, 0x191f, 0x842d, 0x191f, 0xd1b5, 0xd1b5, 
  0xd1b5, 0xd1b5, 0x191f, 0x842d, 0x191f, 0xd1b5, 0xd1b5, 
  0xd1b5, 0xd1b5, 0x3900, 0x842d, 0x3900, 0xd1b5, 0xd1b5, 
  0xd1b5, 0xd1b5, 0x842d, 0x190c, 0x842d, 0xd1b5, 0xd1b5, 
  0xd1b5, 0xd1b5, 0xd1b5, 0x842d, 0x842d, 0xd1b5, 0xd1b5, 
  0xd1b5, 0xd1b5, 0x59c1, 0x59c1, 0x59c1, 0xd1b5, 0xd1b5, 
  // frame 2/4
  0xd1b5, 0x190c, 0x190c, 0x191f, 0x191f, 0xd1b5, 0xd1b5, 
  0xd1b5, 0xd1b5, 0xfeff, 0x190c, 0x190c, 0x190c, 0xd1b5, 
  0xd1b5, 0xd1b5, 0xfeff, 0xfeff, 0x191f, 0xd1b5, 0xd1b5, 
  0xd1b5, 0xd1b5, 0x191f, 0x191f, 0xd1b5, 0xd1b5, 0xd1b5, 
  0xd1b5, 0xd1b5, 0x191f, 0x842d, 0x191f, 0xd1b5, 0xd1b5, 
  0xd1b5, 0xd1b5, 0x191f, 0x191f, 0x842d, 0xd1b5, 0xd1b5, 
  0xd1b5, 0x842d, 0x3900, 0x3900, 0x3900, 0x842d, 0xd1b5, 
  0x190c, 0xd1b5, 0x842d, 0x842d, 0x842d, 0x59c1, 0x190c, 
  0xd1b5, 0xd1b5, 0x842d, 0x842d, 0xd1b5, 0x59c1, 0xd1b5, 
  0xd1b5, 0x59c1, 0x59c1, 0x59c1, 0xd1b5, 0x59c1, 0xd1b5, 
  // frame 3/4
  0xd1b5, 0x190c, 0x190c, 0x191f, 0x191f, 0xd1b5, 0xd1b5, 
  0xd1b5, 0xd1b5, 0xfeff, 0x190c, 0x190c, 0x190c, 0xd1b5, 
  0xd1b5, 0xd1b5, 0xfeff, 0xfeff, 0x191f, 0xd1b5, 0xd1b5, 
  0xd1b5, 0xd1b5, 0x191f, 0x191f, 0xd1b5, 0xd1b5, 0xd1b5, 
  0xd1b5, 0xd1b5, 0x191f, 0x842d, 0x191f, 0xd1b5, 0xd1b5, 
  0xd1b5, 0xd1b5, 0x191f, 0x842d, 0x191f, 0xd1b5, 0xd1b5, 
  0xd1b5, 0xd1b5, 0x3900, 0x842d, 0x3900, 0xd1b5, 0xd1b5, 
  0xd1b5, 0xd1b5, 0x842d, 0x190c, 0x842d, 0xd1b5, 0xd1b5, 
  0xd1b5, 0xd1b5, 0xd1b5, 0x842d, 0x842d, 0xd1b5, 0xd1b5, 
  0xd1b5, 0xd1b5, 0x59c1, 0x59c1, 0x59c1, 0xd1b5, 0xd1b5, 
  // frame 4/4
  0xd1b5, 0x190c, 0x190c, 0x191f, 0x191f, 0xd1b5, 0xd1b5, 
  0xd1b5, 0xd1b5, 0xfeff, 0x190c, 0x190c, 0x190c, 0xd1b5, 
  0xd1b5, 0xd1b5, 0xfeff, 0xfeff, 0x191f, 0xd1b5, 0xd1b5, 
  0xd1b5, 0xd1b5, 0x191f, 0x191f, 0xd1b5, 0xd1b5, 0xd1b5, 
  0xd1b5, 0xd1b5, 0x191f, 0x842d, 0x191f, 0xd1b5, 0xd1b5, 
  0xd1b5, 0xd1b5, 0x842d, 0x191f, 0x191f, 0xd1b5, 0xd1b5, 
  0xd1b5, 0x842d, 0x3900, 0x3900, 0x3900, 0x842d, 0xd1b5, 
  0x190c, 0xd1b5, 0x842d, 0x842d, 0x842d, 0x59c1, 0x190c, 
  0xd1b5, 0xd1b5, 0x842d, 0x842d, 0xd1b5, 0x59c1, 0xd1b5, 
  0xd1b5, 0x59c1, 0x59c1, 0x59c1, 0xd1b5, 0x59c1, 0xd1b5
};

const uint16_t IMAGE_FIGHT_RIGHT[] = {
  7,      // frame width
  10,     // frame height
  4,      // number of frames
  4,      // animation speed
  0xd1b5, // transparent color
  0,      // RGB565 color mode
  // frame 1/4
  0xd1b5, 0xd1b5, 0x191f, 0x191f, 0x190c, 0x190c, 0xd1b5, 
  0xd1b5, 0x190c, 0x190c, 0x190c, 0xfeff, 0xd1b5, 0xd1b5, 
  0xd1b5, 0xd1b5, 0x191f, 0xfeff, 0xfeff, 0xd1b5, 0xd1b5, 
  0xd1b5, 0xd1b5, 0xd1b5, 0x191f, 0x191f, 0xd1b5, 0xd1b5, 
  0xd1b5, 0xd1b5, 0x191f, 0x842d, 0x191f, 0xd1b5, 0xd1b5, 
  0xd1b5, 0xd1b5, 0x191f, 0x842d, 0x842d, 0x190c, 0xd1b5, 
  0xd1b5, 0xd1b5, 0x3900, 0x3900, 0x3900, 0xd1b5, 0xd1b5, 
  0xd1b5, 0xd1b5, 0x842d, 0x842d, 0x842d, 0xd1b5, 0xd1b5, 
  0xd1b5, 0xd1b5, 0x842d, 0x842d, 0xd1b5, 0xd1b5, 0xd1b5, 
  0xd1b5, 0xd1b5, 0x59c1, 0x59c1, 0x59c1, 0xd1b5, 0xd1b5, 
  // frame 2/4
  0xd1b5, 0xd1b5, 0x191f, 0x191f, 0x190c, 0x190c, 0xd1b5, 
  0xd1b5, 0x190c, 0x190c, 0x190c, 0xfeff, 0xd1b5, 0xd1b5, 
  0xd1b5, 0xd1b5, 0x191f, 0xfeff, 0xfeff, 0xd1b5, 0xd1b5, 
  0xd1b5, 0xd1b5, 0xd1b5, 0x191f, 0x191f, 0xd1b5, 0xd1b5, 
  0xd1b5, 0xd1b5, 0x191f, 0x842d, 0x191f, 0xd1b5, 0xd1b5, 
  0xd1b5, 0xd1b5, 0x191f, 0x842d, 0x842d, 0x842d, 0x190c, 
  0xd1b5, 0xd1b5, 0x3900, 0x3900, 0x3900, 0xd1b5, 0xd1b5, 
  0xd1b5, 0x59c1, 0x842d, 0x842d, 0x842d, 0xd1b5, 0xd1b5, 
  0xd1b5, 0x59c1, 0xd1b5, 0x842d, 0x842d, 0xd1b5, 0xd1b5, 
  0xd1b5, 0x59c1, 0xd1b5, 0x59c1, 0x59c1, 0x59c1, 0xd1b5, 
  // frame 3/4
  0xd1b5, 0xd1b5, 0x191f, 0x191f, 0x190c, 0x190c, 0xd1b5, 
  0xd1b5, 0x190c, 0x190c, 0x190c, 0xfeff, 0xd1b5, 0xd1b5, 
  0xd1b5, 0xd1b5, 0x191f, 0xfeff, 0xfeff, 0xd1b5, 0xd1b5, 
  0xd1b5, 0xd1b5, 0xd1b5, 0x191f, 0x191f, 0xd1b5, 0xd1b5, 
  0xd1b5, 0xd1b5, 0x191f, 0x842d, 0x191f, 0xd1b5, 0xd1b5, 
  0xd1b5, 0xd1b5, 0x191f, 0x842d, 0x842d, 0x190c, 0xd1b5, 
  0xd1b5, 0xd1b5, 0x3900, 0x3900, 0x3900, 0xd1b5, 0xd1b5, 
  0xd1b5, 0xd1b5, 0x842d, 0x842d, 0x842d, 0xd1b5, 0xd1b5, 
  0xd1b5, 0xd1b5, 0x842d, 0x842d, 0xd1b5, 0xd1b5, 0xd1b5, 
  0xd1b5, 0xd1b5, 0x59c1, 0x59c1, 0x59c1, 0xd1b5, 0xd1b5, 
  // frame 4/4
  0xd1b5, 0xd1b5, 0x191f, 0x191f, 0x190c, 0x190c, 0xd1b5, 
  0xd1b5, 0x190c, 0x190c, 0x190c, 0xfeff, 0xd1b5, 0xd1b5, 
  0xd1b5, 0xd1b5, 0x191f, 0xfeff, 0xfeff, 0xd1b5, 0xd1b5, 
  0xd1b5, 0xd1b5, 0xd1b5, 0x191f, 0x191f, 0xd1b5, 0xd1b5, 
  0xd1b5, 0xd1b5, 0x191f, 0x842d, 0x191f, 0x842d, 0x190c, 
  0xd1b5, 0xd1b5, 0x191f, 0x842d, 0x190c, 0xd1b5, 0xd1b5, 
  0xd1b5, 0xd1b5, 0x3900, 0x3900, 0x3900, 0xd1b5, 0xd1b5, 
  0xd1b5, 0x59c1, 0x842d, 0x842d, 0x842d, 0xd1b5, 0xd1b5, 
  0xd1b5, 0x59c1, 0xd1b5, 0x842d, 0x842d, 0xd1b5, 0xd1b5, 
  0xd1b5, 0x59c1, 0xd1b5, 0x59c1, 0x59c1, 0x59c1, 0xd1b5
};

const uint16_t IMAGE_FIGHT_LEFT[] = {
  7,      // frame width
  10,     // frame height
  4,      // number of frames
  4,      // animation speed
  0xd1b5, // transparent color
  0,      // RGB565 color mode
  // frame 1/4
  0xd1b5, 0x190c, 0x190c, 0x191f, 0x191f, 0xd1b5, 0xd1b5, 
  0xd1b5, 0xd1b5, 0xfeff, 0x190c, 0x190c, 0x190c, 0xd1b5, 
  0xd1b5, 0xd1b5, 0xfeff, 0xfeff, 0x191f, 0xd1b5, 0xd1b5, 
  0xd1b5, 0xd1b5, 0x191f, 0x191f, 0xd1b5, 0xd1b5, 0xd1b5, 
  0xd1b5, 0xd1b5, 0x191f, 0x842d, 0x191f, 0xd1b5, 0xd1b5, 
  0xd1b5, 0x190c, 0x842d, 0x842d, 0x191f, 0xd1b5, 0xd1b5, 
  0xd1b5, 0xd1b5, 0x3900, 0x3900, 0x3900, 0xd1b5, 0xd1b5, 
  0xd1b5, 0xd1b5, 0x842d, 0x842d, 0x842d, 0xd1b5, 0xd1b5, 
  0xd1b5, 0xd1b5, 0xd1b5, 0x842d, 0x842d, 0xd1b5, 0xd1b5, 
  0xd1b5, 0xd1b5, 0x59c1, 0x59c1, 0x59c1, 0xd1b5, 0xd1b5, 
  // frame 2/4
  0xd1b5, 0x190c, 0x190c, 0x191f, 0x191f, 0xd1b5, 0xd1b5, 
  0xd1b5, 0xd1b5, 0xfeff, 0x190c, 0x190c, 0x190c, 0xd1b5, 
  0xd1b5, 0xd1b5, 0xfeff, 0xfeff, 0x191f, 0xd1b5, 0xd1b5, 
  0xd1b5, 0xd1b5, 0x191f, 0x191f, 0xd1b5, 0xd1b5, 0xd1b5, 
  0xd1b5, 0xd1b5, 0x191f, 0x842d, 0x191f, 0xd1b5, 0xd1b5, 
  0x190c, 0x842d, 0x842d, 0x842d, 0x191f, 0xd1b5, 0xd1b5, 
  0xd1b5, 0xd1b5, 0x3900, 0x3900, 0x3900, 0xd1b5, 0xd1b5, 
  0xd1b5, 0xd1b5, 0x842d, 0x842d, 0x842d, 0x59c1, 0xd1b5, 
  0xd1b5, 0xd1b5, 0x842d, 0x842d, 0xd1b5, 0x59c1, 0xd1b5, 
  0xd1b5, 0x59c1, 0x59c1, 0x59c1, 0xd1b5, 0x59c1, 0xd1b5, 
  // frame 3/4
  0xd1b5, 0x190c, 0x190c, 0x191f, 0x191f, 0xd1b5, 0xd1b5, 
  0xd1b5, 0xd1b5, 0xfeff, 0x190c, 0x190c, 0x190c, 0xd1b5, 
  0xd1b5, 0xd1b5, 0xfeff, 0xfeff, 0x191f, 0xd1b5, 0xd1b5, 
  0xd1b5, 0xd1b5, 0x191f, 0x191f, 0xd1b5, 0xd1b5, 0xd1b5, 
  0xd1b5, 0xd1b5, 0x191f, 0x842d, 0x191f, 0xd1b5, 0xd1b5, 
  0xd1b5, 0x190c, 0x842d, 0x842d, 0x191f, 0xd1b5, 0xd1b5, 
  0xd1b5, 0xd1b5, 0x3900, 0x3900, 0x3900, 0xd1b5, 0xd1b5, 
  0xd1b5, 0xd1b5, 0x842d, 0x842d, 0x842d, 0xd1b5, 0xd1b5, 
  0xd1b5, 0xd1b5, 0xd1b5, 0x842d, 0x842d, 0xd1b5, 0xd1b5, 
  0xd1b5, 0xd1b5, 0x59c1, 0x59c1, 0x59c1, 0xd1b5, 0xd1b5, 
  // frame 4/4
  0xd1b5, 0x190c, 0x190c, 0x191f, 0x191f, 0xd1b5, 0xd1b5, 
  0xd1b5, 0xd1b5, 0xfeff, 0x190c, 0x190c, 0x190c, 0xd1b5, 
  0xd1b5, 0xd1b5, 0xfeff, 0xfeff, 0x191f, 0xd1b5, 0xd1b5, 
  0xd1b5, 0xd1b5, 0x191f, 0x191f, 0xd1b5, 0xd1b5, 0xd1b5, 
  0x190c, 0x842d, 0x191f, 0x842d, 0x191f, 0xd1b5, 0xd1b5, 
  0xd1b5, 0xd1b5, 0x190c, 0x842d, 0x191f, 0xd1b5, 0xd1b5, 
  0xd1b5, 0xd1b5, 0x3900, 0x3900, 0x3900, 0xd1b5, 0xd1b5, 
  0xd1b5, 0xd1b5, 0x842d, 0x842d, 0x842d, 0x59c1, 0xd1b5, 
  0xd1b5, 0xd1b5, 0x842d, 0x842d, 0xd1b5, 0x59c1, 0xd1b5, 
  0xd1b5, 0x59c1, 0x59c1, 0x59c1, 0xd1b5, 0x59c1, 0xd1b5
};

Image LadderIdle(IMAGE_MOVING_LADDER);
Image RightIdle(IMAGE_MOVING_RIGHT);
Image LeftIdle(IMAGE_MOVING_LEFT);
Image FightRIdle(IMAGE_FIGHT_RIGHT);
Image FightLIdle(IMAGE_FIGHT_LEFT);
//----------------------Enemies---------------
const uint16_t IMAGE_GHOSTL[] = {
  7,      // frame width
  10,     // frame height
  4,      // number of frames
  4,      // animation speed
  0xd1b5, // transparent color
  0,      // RGB565 color mode
  // frame 1/4
  0xd1b5, 0xd1b5, 0xd1b5, 0xf7ba, 0xf7ba, 0xd1b5, 0xd1b5, 
  0xd1b5, 0xd1b5, 0xf7ba, 0xf7ba, 0xf7ba, 0xf7ba, 0xd1b5, 
  0xd1b5, 0xf7ba, 0xf7ba, 0xd1b5, 0xf7ba, 0xf7ba, 0xd1b5, 
  0xf7ba, 0xf7ba, 0xf7ba, 0xf7ba, 0xf7ba, 0xd1b5, 0xd1b5, 
  0xd1b5, 0xd1b5, 0xf7ba, 0xf7ba, 0xf7ba, 0xd1b5, 0xd1b5, 
  0xd1b5, 0xf7ba, 0xf7ba, 0x842d, 0xf7ba, 0xf7ba, 0xd1b5, 
  0xf7ba, 0xf7ba, 0x842d, 0x842d, 0xf7ba, 0xf7ba, 0xd1b5, 
  0xf7ba, 0xf7ba, 0xf7ba, 0xf7ba, 0xf7ba, 0xf7ba, 0xd1b5, 
  0xf7ba, 0xf7ba, 0xf7ba, 0xf7ba, 0xf7ba, 0xf7ba, 0xd1b5, 
  0xf7ba, 0xd1b5, 0xf7ba, 0xd1b5, 0xf7ba, 0xd1b5, 0xd1b5, 
  // frame 2/4
  0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xf7ba, 0xf7ba, 0xd1b5, 
  0xd1b5, 0xd1b5, 0xd1b5, 0xf7ba, 0xf7ba, 0xf7ba, 0xf7ba, 
  0xd1b5, 0xd1b5, 0xf7ba, 0xf7ba, 0xd1b5, 0xf7ba, 0xf7ba, 
  0xd1b5, 0xf7ba, 0xf7ba, 0xf7ba, 0xf7ba, 0xf7ba, 0xd1b5, 
  0xd1b5, 0xd1b5, 0xd1b5, 0xf7ba, 0xf7ba, 0xf7ba, 0xd1b5, 
  0xd1b5, 0xf7ba, 0xf7ba, 0xf7ba, 0x842d, 0xf7ba, 0xd1b5, 
  0xf7ba, 0xf7ba, 0xf7ba, 0xf7ba, 0x842d, 0xf7ba, 0xd1b5, 
  0xf7ba, 0xf7ba, 0xf7ba, 0xf7ba, 0xf7ba, 0xf7ba, 0xd1b5, 
  0xf7ba, 0xf7ba, 0xf7ba, 0xf7ba, 0xf7ba, 0xf7ba, 0xd1b5, 
  0xd1b5, 0xf7ba, 0xd1b5, 0xf7ba, 0xd1b5, 0xf7ba, 0xd1b5, 
  // frame 3/4
  0xd1b5, 0xd1b5, 0xd1b5, 0xf7ba, 0xf7ba, 0xd1b5, 0xd1b5, 
  0xd1b5, 0xd1b5, 0xf7ba, 0xf7ba, 0xf7ba, 0xf7ba, 0xd1b5, 
  0xd1b5, 0xf7ba, 0xf7ba, 0xd1b5, 0xf7ba, 0xf7ba, 0xd1b5, 
  0xf7ba, 0xf7ba, 0xf7ba, 0xf7ba, 0xf7ba, 0xf7ba, 0xd1b5, 
  0xd1b5, 0xd1b5, 0xf7ba, 0xf7ba, 0xf7ba, 0xd1b5, 0xd1b5, 
  0xd1b5, 0xf7ba, 0xf7ba, 0x842d, 0xf7ba, 0xf7ba, 0xd1b5, 
  0xf7ba, 0xf7ba, 0xf7ba, 0x842d, 0x842d, 0xf7ba, 0xd1b5, 
  0xf7ba, 0xf7ba, 0xf7ba, 0xf7ba, 0xf7ba, 0xf7ba, 0xd1b5, 
  0xf7ba, 0xf7ba, 0xf7ba, 0xf7ba, 0xf7ba, 0xf7ba, 0xd1b5, 
  0xf7ba, 0xd1b5, 0xf7ba, 0xd1b5, 0xf7ba, 0xd1b5, 0xd1b5, 
  // frame 4/4
  0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xf7ba, 0xf7ba, 0xd1b5, 
  0xd1b5, 0xd1b5, 0xd1b5, 0xf7ba, 0xf7ba, 0xf7ba, 0xf7ba, 
  0xd1b5, 0xd1b5, 0xf7ba, 0xf7ba, 0xd1b5, 0xf7ba, 0xf7ba, 
  0xd1b5, 0xf7ba, 0xf7ba, 0xf7ba, 0xf7ba, 0xf7ba, 0xd1b5, 
  0xd1b5, 0xd1b5, 0xd1b5, 0xf7ba, 0xf7ba, 0xf7ba, 0xd1b5, 
  0xd1b5, 0xf7ba, 0xf7ba, 0xf7ba, 0x842d, 0xf7ba, 0xd1b5, 
  0xf7ba, 0xf7ba, 0xf7ba, 0xf7ba, 0x842d, 0xf7ba, 0xd1b5, 
  0xf7ba, 0xf7ba, 0xf7ba, 0xf7ba, 0xf7ba, 0xf7ba, 0xd1b5, 
  0xf7ba, 0xf7ba, 0xf7ba, 0xf7ba, 0xf7ba, 0xf7ba, 0xd1b5, 
  0xd1b5, 0xf7ba, 0xd1b5, 0xf7ba, 0xd1b5, 0xf7ba, 0xd1b5
};

const uint16_t IMAGE_GHOSTR[] = {
  7,      // frame width
  10,     // frame height
  4,      // number of frames
  4,      // animation speed
  0xd1b5, // transparent color
  0,      // RGB565 color mode
  // frame 1/4
  0xd1b5, 0xd1b5, 0xf7ba, 0xf7ba, 0xd1b5, 0xd1b5, 0xd1b5, 
  0xd1b5, 0xf7ba, 0xf7ba, 0xf7ba, 0xf7ba, 0xd1b5, 0xd1b5, 
  0xd1b5, 0xf7ba, 0xf7ba, 0xd1b5, 0xf7ba, 0xf7ba, 0xd1b5, 
  0xd1b5, 0xd1b5, 0xf7ba, 0xf7ba, 0xf7ba, 0xf7ba, 0xf7ba, 
  0xd1b5, 0xd1b5, 0xf7ba, 0xf7ba, 0xf7ba, 0xd1b5, 0xd1b5, 
  0xd1b5, 0xf7ba, 0xf7ba, 0x842d, 0xf7ba, 0xf7ba, 0xd1b5, 
  0xd1b5, 0xf7ba, 0xf7ba, 0x842d, 0x842d, 0xf7ba, 0xf7ba, 
  0xd1b5, 0xf7ba, 0xf7ba, 0xf7ba, 0xf7ba, 0xf7ba, 0xf7ba, 
  0xd1b5, 0xf7ba, 0xf7ba, 0xf7ba, 0xf7ba, 0xf7ba, 0xf7ba, 
  0xd1b5, 0xd1b5, 0xf7ba, 0xd1b5, 0xf7ba, 0xd1b5, 0xf7ba, 
  // frame 2/4
  0xd1b5, 0xf7ba, 0xf7ba, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 
  0xf7ba, 0xf7ba, 0xf7ba, 0xf7ba, 0xd1b5, 0xd1b5, 0xd1b5, 
  0xf7ba, 0xf7ba, 0xd1b5, 0xf7ba, 0xf7ba, 0xd1b5, 0xd1b5, 
  0xd1b5, 0xf7ba, 0xf7ba, 0xf7ba, 0xf7ba, 0xf7ba, 0xd1b5, 
  0xd1b5, 0xf7ba, 0xf7ba, 0xf7ba, 0xd1b5, 0xd1b5, 0xd1b5, 
  0xd1b5, 0xf7ba, 0x842d, 0xf7ba, 0xf7ba, 0xf7ba, 0xd1b5, 
  0xd1b5, 0xf7ba, 0x842d, 0xf7ba, 0xf7ba, 0xf7ba, 0xf7ba, 
  0xd1b5, 0xf7ba, 0xf7ba, 0xf7ba, 0xf7ba, 0xf7ba, 0xf7ba, 
  0xd1b5, 0xf7ba, 0xf7ba, 0xf7ba, 0xf7ba, 0xf7ba, 0xf7ba, 
  0xd1b5, 0xf7ba, 0xd1b5, 0xf7ba, 0xd1b5, 0xf7ba, 0xd1b5, 
  // frame 3/4
  0xd1b5, 0xd1b5, 0xf7ba, 0xf7ba, 0xd1b5, 0xd1b5, 0xd1b5, 
  0xd1b5, 0xf7ba, 0xf7ba, 0xf7ba, 0xf7ba, 0xd1b5, 0xd1b5, 
  0xd1b5, 0xf7ba, 0xf7ba, 0xd1b5, 0xf7ba, 0xf7ba, 0xd1b5, 
  0xd1b5, 0xf7ba, 0xf7ba, 0xf7ba, 0xf7ba, 0xf7ba, 0xf7ba, 
  0xd1b5, 0xd1b5, 0xf7ba, 0xf7ba, 0xf7ba, 0xd1b5, 0xd1b5, 
  0xd1b5, 0xf7ba, 0xf7ba, 0x842d, 0xf7ba, 0xf7ba, 0xd1b5, 
  0xd1b5, 0xf7ba, 0x842d, 0x842d, 0xf7ba, 0xf7ba, 0xf7ba, 
  0xd1b5, 0xf7ba, 0xf7ba, 0xf7ba, 0xf7ba, 0xf7ba, 0xf7ba, 
  0xd1b5, 0xf7ba, 0xf7ba, 0xf7ba, 0xf7ba, 0xf7ba, 0xf7ba, 
  0xd1b5, 0xd1b5, 0xf7ba, 0xd1b5, 0xf7ba, 0xd1b5, 0xf7ba, 
  // frame 4/4
  0xd1b5, 0xf7ba, 0xf7ba, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 
  0xf7ba, 0xf7ba, 0xf7ba, 0xf7ba, 0xd1b5, 0xd1b5, 0xd1b5, 
  0xf7ba, 0xf7ba, 0xd1b5, 0xf7ba, 0xf7ba, 0xd1b5, 0xd1b5, 
  0xd1b5, 0xf7ba, 0xf7ba, 0xf7ba, 0xf7ba, 0xf7ba, 0xd1b5, 
  0xd1b5, 0xf7ba, 0xf7ba, 0xf7ba, 0xd1b5, 0xd1b5, 0xd1b5, 
  0xd1b5, 0xf7ba, 0x842d, 0xf7ba, 0xf7ba, 0xf7ba, 0xd1b5, 
  0xd1b5, 0xf7ba, 0x842d, 0xf7ba, 0xf7ba, 0xf7ba, 0xf7ba, 
  0xd1b5, 0xf7ba, 0xf7ba, 0xf7ba, 0xf7ba, 0xf7ba, 0xf7ba, 
  0xd1b5, 0xf7ba, 0xf7ba, 0xf7ba, 0xf7ba, 0xf7ba, 0xf7ba, 
  0xd1b5, 0xf7ba, 0xd1b5, 0xf7ba, 0xd1b5, 0xf7ba, 0xd1b5
};

const uint16_t IMAGE_GHOSTAXE[] = {
  7,      // frame width
  10,     // frame height
  1,      // number of frames
  1,      // animation speed
  0xd1b5, // transparent color
  0,      // RGB565 color mode
  // frame 1/1
  0xd1b5, 0xffff, 0xd1b5, 0xd1b5, 0xd1b5, 0xffff, 0xd1b5, 
  0xffff, 0x842d, 0xffff, 0xd1b5, 0xffff, 0x842d, 0xffff, 
  0xffff, 0x842d, 0x842d, 0xffff, 0x842d, 0x842d, 0xffff, 
  0xffff, 0x842d, 0x842d, 0xffff, 0x842d, 0x842d, 0xffff, 
  0xffff, 0x842d, 0x842d, 0xffff, 0x842d, 0x842d, 0xffff, 
  0xffff, 0x842d, 0xffff, 0xffff, 0xffff, 0x842d, 0xffff, 
  0xd1b5, 0xffff, 0xd1b5, 0xffff, 0xd1b5, 0xffff, 0xd1b5, 
  0xd1b5, 0xd1b5, 0xd1b5, 0xffff, 0xd1b5, 0xd1b5, 0xd1b5, 
  0xd1b5, 0xd1b5, 0xd1b5, 0xffff, 0xd1b5, 0xd1b5, 0xd1b5, 
  0xd1b5, 0xd1b5, 0xd1b5, 0xffff, 0xd1b5, 0xd1b5, 0xd1b5
};

const uint16_t IMAGE_FLYINGSKULL[] = {
  7,      // frame width
  10,     // frame height
  1,      // number of frames
  1,      // animation speed
  0xd1b5, // transparent color
  0,      // RGB565 color mode
  // frame 1/1
  0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 
  0xd1b5, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xd1b5, 
  0xffff, 0xd1b5, 0xffff, 0xffff, 0xffff, 0xd1b5, 0xffff, 
  0xffff, 0xd1b5, 0xd1b5, 0xffff, 0xd1b5, 0xd1b5, 0xffff, 
  0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 
  0xd1b5, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xd1b5, 
  0xd1b5, 0xd1b5, 0xffff, 0xd1b5, 0xffff, 0xd1b5, 0xd1b5, 
  0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 
  0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 
  0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5
};

const uint16_t IMAGE_SKELETON[] = {
  7,      // frame width
  10,     // frame height
  4,      // number of frames
  4,      // animation speed
  0xd1b5, // transparent color
  0,      // RGB565 color mode
  // frame 1/4
  0xd1b5, 0xd1b5, 0xffff, 0xffff, 0xffff, 0xd1b5, 0xd1b5, 
  0xd1b5, 0xd1b5, 0xf800, 0xffff, 0xf800, 0xd1b5, 0xd1b5, 
  0xd1b5, 0xd1b5, 0xffff, 0xffff, 0xffff, 0xd1b5, 0xd1b5, 
  0xd1b5, 0xd1b5, 0xd1b5, 0xffff, 0xd1b5, 0xd1b5, 0xd1b5, 
  0xd1b5, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xd1b5, 
  0xd1b5, 0x842d, 0xd1b5, 0xffff, 0xd1b5, 0x842d, 0xd1b5, 
  0xd1b5, 0x842d, 0xffff, 0xffff, 0xffff, 0x842d, 0xd1b5, 
  0xd1b5, 0xd1b5, 0xffff, 0xd1b5, 0xffff, 0xd1b5, 0xd1b5, 
  0xd1b5, 0xd1b5, 0xffff, 0xd1b5, 0xffff, 0xd1b5, 0xd1b5, 
  0xd1b5, 0xd1b5, 0xffff, 0xd1b5, 0xf7ba, 0xd1b5, 0xd1b5, 
  // frame 2/4
  0xd1b5, 0xf7ba, 0xffff, 0xffff, 0xd1b5, 0xd1b5, 0xd1b5, 
  0xd1b5, 0xf800, 0xffff, 0xf800, 0xd1b5, 0xd1b5, 0xd1b5, 
  0xd1b5, 0xf7ba, 0xffff, 0xffff, 0xd1b5, 0xd1b5, 0xd1b5, 
  0xd1b5, 0xd1b5, 0xd1b5, 0xffff, 0xd1b5, 0xd1b5, 0xd1b5, 
  0x842d, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0x842d, 
  0x842d, 0xd1b5, 0xd1b5, 0xf7ba, 0xd1b5, 0xd1b5, 0x842d, 
  0xd1b5, 0xd1b5, 0xf7ba, 0xf7ba, 0xf7ba, 0xd1b5, 0xd1b5, 
  0xd1b5, 0xd1b5, 0xf7ba, 0xd1b5, 0xf7ba, 0xd1b5, 0xd1b5, 
  0xd1b5, 0xd1b5, 0xf7ba, 0xd1b5, 0xf7ba, 0xd1b5, 0xd1b5, 
  0xd1b5, 0xd1b5, 0xf7ba, 0xd1b5, 0xf7ba, 0xd1b5, 0xd1b5, 
  // frame 3/4
  0xd1b5, 0xd1b5, 0xf7ba, 0xf7ba, 0xf7ba, 0xd1b5, 0xd1b5, 
  0xd1b5, 0xd1b5, 0xf800, 0xf7ba, 0xf800, 0xd1b5, 0xd1b5, 
  0xd1b5, 0xd1b5, 0xf7ba, 0xf7ba, 0xf7ba, 0xd1b5, 0xd1b5, 
  0xd1b5, 0xd1b5, 0xd1b5, 0xf7ba, 0xd1b5, 0xd1b5, 0xd1b5, 
  0xd1b5, 0xf7ba, 0xf7ba, 0xf7ba, 0xf7ba, 0xf7ba, 0xd1b5, 
  0xd1b5, 0x842d, 0xd1b5, 0xf7ba, 0xd1b5, 0x842d, 0xd1b5, 
  0xd1b5, 0x842d, 0xf7ba, 0xf7ba, 0xf7ba, 0x842d, 0xd1b5, 
  0xd1b5, 0xd1b5, 0xf7ba, 0xd1b5, 0xf7ba, 0xd1b5, 0xd1b5, 
  0xd1b5, 0xd1b5, 0xf7ba, 0xd1b5, 0xf7ba, 0xd1b5, 0xd1b5, 
  0xd1b5, 0xd1b5, 0xf7ba, 0xd1b5, 0xf7ba, 0xd1b5, 0xd1b5, 
  // frame 4/4
  0xd1b5, 0xd1b5, 0xd1b5, 0xffff, 0xffff, 0xffff, 0xd1b5, 
  0xd1b5, 0xd1b5, 0xd1b5, 0xf800, 0xffff, 0xf800, 0xd1b5, 
  0xd1b5, 0xd1b5, 0xd1b5, 0xffff, 0xffff, 0xffff, 0xd1b5, 
  0xd1b5, 0xd1b5, 0xd1b5, 0xffff, 0xd1b5, 0xd1b5, 0xd1b5, 
  0x842d, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0x842d, 
  0x842d, 0xd1b5, 0xd1b5, 0xffff, 0xd1b5, 0xd1b5, 0x842d, 
  0xd1b5, 0xd1b5, 0xffff, 0xffff, 0xffff, 0xd1b5, 0xd1b5, 
  0xd1b5, 0xd1b5, 0xffff, 0xd1b5, 0xffff, 0xd1b5, 0xd1b5, 
  0xd1b5, 0xd1b5, 0xffff, 0xd1b5, 0xffff, 0xd1b5, 0xd1b5, 
  0xd1b5, 0xd1b5, 0xffff, 0xd1b5, 0xffff, 0xd1b5, 0xd1b5
};

const uint16_t IMAGE_SPECTRE[] = {
  7,      // frame width
  10,     // frame height
  4,      // number of frames
  4,      // animation speed
  0xd1b5, // transparent color
  0,      // RGB565 color mode
  // frame 1/4
  0xd1b5, 0xd1b5, 0xd1b5, 0xf7ba, 0xd1b5, 0xd1b5, 0xd1b5, 
  0xd1b5, 0xd1b5, 0xf7ba, 0x0000, 0xf7ba, 0xd1b5, 0xd1b5, 
  0xd1b5, 0xf7ba, 0x0000, 0x0000, 0x0000, 0xf7ba, 0xd1b5, 
  0xd1b5, 0xf7ba, 0xf7ba, 0xf7ba, 0xf7ba, 0xf7ba, 0xd1b5, 
  0x842d, 0x842d, 0x842d, 0xf7ba, 0x842d, 0x842d, 0x842d, 
  0x842d, 0x842d, 0x842d, 0xf7ba, 0x842d, 0x842d, 0x842d, 
  0x842d, 0x842d, 0x842d, 0xf7ba, 0x842d, 0x842d, 0x842d, 
  0x842d, 0x842d, 0xf7ba, 0xf7ba, 0xf7ba, 0x842d, 0x842d, 
  0x842d, 0x842d, 0xf7ba, 0xf7ba, 0xf7ba, 0x842d, 0x842d, 
  0xd1b5, 0xf7ba, 0xf7ba, 0xf7ba, 0xf7ba, 0xf7ba, 0xd1b5, 
  // frame 2/4
  0xd1b5, 0xd1b5, 0xd1b5, 0xf7ba, 0xd1b5, 0xd1b5, 0xd1b5, 
  0xd1b5, 0xd1b5, 0xf7ba, 0x0000, 0xf7ba, 0xd1b5, 0xd1b5, 
  0xd1b5, 0xf7ba, 0x0000, 0x0000, 0x0000, 0xf7ba, 0xd1b5, 
  0xd1b5, 0xf7ba, 0x842d, 0xf7ba, 0x842d, 0xf7ba, 0xd1b5, 
  0x842d, 0x842d, 0x842d, 0xf7ba, 0x842d, 0x842d, 0x842d, 
  0x842d, 0x842d, 0x842d, 0xf7ba, 0x842d, 0x842d, 0x842d, 
  0x842d, 0x842d, 0xf7ba, 0xf7ba, 0xf7ba, 0x842d, 0x842d, 
  0x842d, 0xd1b5, 0xf7ba, 0xf7ba, 0xf7ba, 0xd1b5, 0x842d, 
  0xd1b5, 0xf7ba, 0xf7ba, 0xf7ba, 0xf7ba, 0xf7ba, 0xd1b5, 
  0xd1b5, 0xf7ba, 0xf7ba, 0xf7ba, 0xf7ba, 0xf7ba, 0xd1b5, 
  // frame 3/4
  0xd1b5, 0xd1b5, 0xd1b5, 0xf7ba, 0xd1b5, 0xd1b5, 0xd1b5, 
  0xd1b5, 0xd1b5, 0xf7ba, 0x0000, 0xf7ba, 0xd1b5, 0xd1b5, 
  0xd1b5, 0xf7ba, 0x0000, 0x0000, 0x0000, 0xf7ba, 0xd1b5, 
  0xd1b5, 0xf7ba, 0xf7ba, 0xf7ba, 0xf7ba, 0xf7ba, 0xd1b5, 
  0x842d, 0x842d, 0x842d, 0xf7ba, 0x842d, 0x842d, 0x842d, 
  0x842d, 0x842d, 0x842d, 0xf7ba, 0x842d, 0x842d, 0x842d, 
  0x842d, 0x842d, 0x842d, 0xf7ba, 0x842d, 0x842d, 0x842d, 
  0x842d, 0x842d, 0xffff, 0xf7ba, 0xffff, 0x842d, 0x842d, 
  0x842d, 0x842d, 0xffff, 0xf7ba, 0xffff, 0x842d, 0x842d, 
  0xd1b5, 0xf7ba, 0xf7ba, 0xf7ba, 0xf7ba, 0xf7ba, 0xd1b5, 
  // frame 4/4
  0xd1b5, 0xd1b5, 0xd1b5, 0xf7ba, 0xd1b5, 0xd1b5, 0xd1b5, 
  0xd1b5, 0xd1b5, 0xf7ba, 0x0000, 0xf7ba, 0xd1b5, 0xd1b5, 
  0xd1b5, 0xf7ba, 0x0000, 0x0000, 0x0000, 0xf7ba, 0xd1b5, 
  0xd1b5, 0xf7ba, 0xf7ba, 0xf7ba, 0xf7ba, 0xf7ba, 0xd1b5, 
  0x842d, 0x842d, 0xffff, 0xf7ba, 0xffff, 0x842d, 0x842d, 
  0x842d, 0x842d, 0x842d, 0xf7ba, 0x842d, 0x842d, 0x842d, 
  0x842d, 0x842d, 0x842d, 0xf7ba, 0x842d, 0x842d, 0x842d, 
  0x842d, 0x842d, 0x842d, 0xf7ba, 0x842d, 0x842d, 0x842d, 
  0xd1b5, 0x842d, 0xffff, 0xf7ba, 0xffff, 0x842d, 0xd1b5, 
  0xd1b5, 0xf7ba, 0xf7ba, 0xf7ba, 0xf7ba, 0xf7ba, 0xd1b5
};

const uint16_t IMAGE_SNAKEL[] = {
  7,      // frame width
  10,     // frame height
  4,      // number of frames
  4,      // animation speed
  0xd1b5, // transparent color
  0,      // RGB565 color mode
  // frame 1/4
  0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 
  0xffff, 0xffff, 0xffff, 0xd1b5, 0xffff, 0xd1b5, 0xd1b5, 
  0xd1b5, 0xd1b5, 0xffff, 0xffff, 0xd1b5, 0xffff, 0xd1b5, 
  0xffff, 0xffff, 0xffff, 0xd1b5, 0xd1b5, 0xffff, 0xd1b5, 
  0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xffff, 0xd1b5, 0xd1b5, 
  0xd1b5, 0xd1b5, 0xd1b5, 0xffff, 0xd1b5, 0xd1b5, 0xd1b5, 
  0xd1b5, 0xd1b5, 0xffff, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 
  0xd1b5, 0xd1b5, 0xffff, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 
  0xd1b5, 0xd1b5, 0xd1b5, 0xffff, 0xd1b5, 0xd1b5, 0xd1b5, 
  0xd1b5, 0xd1b5, 0x842d, 0x842d, 0x842d, 0xd1b5, 0xd1b5, 
  // frame 2/4
  0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 
  0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 
  0xffff, 0xffff, 0xffff, 0xd1b5, 0xffff, 0xffff, 0xd1b5, 
  0xd1b5, 0xd1b5, 0xffff, 0xffff, 0xd1b5, 0xd1b5, 0xffff, 
  0xffff, 0xffff, 0xffff, 0xd1b5, 0xd1b5, 0xffff, 0xd1b5, 
  0xd1b5, 0xd1b5, 0xd1b5, 0xf7ba, 0xffff, 0xd1b5, 0xd1b5, 
  0xd1b5, 0xd1b5, 0xf7ba, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 
  0xd1b5, 0xd1b5, 0xf7ba, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 
  0xd1b5, 0xd1b5, 0xd1b5, 0xf7ba, 0xd1b5, 0xd1b5, 0xd1b5, 
  0xd1b5, 0xd1b5, 0x842d, 0x842d, 0x842d, 0xd1b5, 0xd1b5, 
  // frame 3/4
  0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 
  0xf7ba, 0xf7ba, 0xf7ba, 0xd1b5, 0xf7ba, 0xd1b5, 0xd1b5, 
  0xd1b5, 0xd1b5, 0xf7ba, 0xf7ba, 0xd1b5, 0xf7ba, 0xd1b5, 
  0xf7ba, 0xf7ba, 0xf7ba, 0xd1b5, 0xd1b5, 0xf7ba, 0xd1b5, 
  0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xf7ba, 0xd1b5, 0xd1b5, 
  0xd1b5, 0xd1b5, 0xd1b5, 0xf7ba, 0xd1b5, 0xd1b5, 0xd1b5, 
  0xd1b5, 0xd1b5, 0xf7ba, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 
  0xd1b5, 0xd1b5, 0xf7ba, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 
  0xd1b5, 0xd1b5, 0xd1b5, 0xf7ba, 0xd1b5, 0xd1b5, 0xd1b5, 
  0xd1b5, 0xd1b5, 0x842d, 0x842d, 0x842d, 0xd1b5, 0xd1b5, 
  // frame 4/4
  0xd1b5, 0xf7ba, 0xf7ba, 0xf7ba, 0xd1b5, 0xf7ba, 0xd1b5, 
  0xd1b5, 0xd1b5, 0xd1b5, 0xf7ba, 0xf7ba, 0xd1b5, 0xf7ba, 
  0xd1b5, 0xf7ba, 0xf7ba, 0xf7ba, 0xd1b5, 0xd1b5, 0xf7ba, 
  0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xf7ba, 0xd1b5, 
  0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xf7ba, 0xd1b5, 0xd1b5, 
  0xd1b5, 0xd1b5, 0xd1b5, 0xf7ba, 0xd1b5, 0xd1b5, 0xd1b5, 
  0xd1b5, 0xd1b5, 0xf7ba, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 
  0xd1b5, 0xd1b5, 0xf7ba, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 
  0xd1b5, 0xd1b5, 0xd1b5, 0xf7ba, 0xd1b5, 0xd1b5, 0xd1b5, 
  0xd1b5, 0xd1b5, 0x842d, 0x842d, 0x842d, 0xd1b5, 0xd1b5
};

const uint16_t IMAGE_SNAKER[] = {
  7,      // frame width
  10,     // frame height
  4,      // number of frames
  4,      // animation speed
  0xd1b5, // transparent color
  0,      // RGB565 color mode
  // frame 1/4
  0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 
  0xd1b5, 0xd1b5, 0xffff, 0xd1b5, 0xffff, 0xffff, 0xffff, 
  0xd1b5, 0xffff, 0xd1b5, 0xffff, 0xffff, 0xd1b5, 0xd1b5, 
  0xd1b5, 0xffff, 0xd1b5, 0xd1b5, 0xffff, 0xffff, 0xffff, 
  0xd1b5, 0xd1b5, 0xffff, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 
  0xd1b5, 0xd1b5, 0xd1b5, 0xffff, 0xd1b5, 0xd1b5, 0xd1b5, 
  0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xffff, 0xd1b5, 0xd1b5, 
  0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xffff, 0xd1b5, 0xd1b5, 
  0xd1b5, 0xd1b5, 0xd1b5, 0xffff, 0xd1b5, 0xd1b5, 0xd1b5, 
  0xd1b5, 0xd1b5, 0x842d, 0x842d, 0x842d, 0xd1b5, 0xd1b5, 
  // frame 2/4
  0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 
  0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 
  0xd1b5, 0xffff, 0xffff, 0xd1b5, 0xffff, 0xffff, 0xffff, 
  0xffff, 0xd1b5, 0xd1b5, 0xffff, 0xffff, 0xd1b5, 0xd1b5, 
  0xd1b5, 0xffff, 0xd1b5, 0xd1b5, 0xffff, 0xffff, 0xffff, 
  0xd1b5, 0xd1b5, 0xffff, 0xf7ba, 0xd1b5, 0xd1b5, 0xd1b5, 
  0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xf7ba, 0xd1b5, 0xd1b5, 
  0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xf7ba, 0xd1b5, 0xd1b5, 
  0xd1b5, 0xd1b5, 0xd1b5, 0xf7ba, 0xd1b5, 0xd1b5, 0xd1b5, 
  0xd1b5, 0xd1b5, 0x842d, 0x842d, 0x842d, 0xd1b5, 0xd1b5, 
  // frame 3/4
  0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 
  0xd1b5, 0xd1b5, 0xf7ba, 0xd1b5, 0xf7ba, 0xf7ba, 0xf7ba, 
  0xd1b5, 0xf7ba, 0xd1b5, 0xf7ba, 0xf7ba, 0xd1b5, 0xd1b5, 
  0xd1b5, 0xf7ba, 0xd1b5, 0xd1b5, 0xf7ba, 0xf7ba, 0xf7ba, 
  0xd1b5, 0xd1b5, 0xf7ba, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 
  0xd1b5, 0xd1b5, 0xd1b5, 0xf7ba, 0xd1b5, 0xd1b5, 0xd1b5, 
  0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xf7ba, 0xd1b5, 0xd1b5, 
  0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xf7ba, 0xd1b5, 0xd1b5, 
  0xd1b5, 0xd1b5, 0xd1b5, 0xf7ba, 0xd1b5, 0xd1b5, 0xd1b5, 
  0xd1b5, 0xd1b5, 0x842d, 0x842d, 0x842d, 0xd1b5, 0xd1b5, 
  // frame 4/4
  0xd1b5, 0xf7ba, 0xd1b5, 0xf7ba, 0xf7ba, 0xf7ba, 0xd1b5, 
  0xf7ba, 0xd1b5, 0xf7ba, 0xf7ba, 0xd1b5, 0xd1b5, 0xd1b5, 
  0xf7ba, 0xd1b5, 0xd1b5, 0xf7ba, 0xf7ba, 0xf7ba, 0xd1b5, 
  0xd1b5, 0xf7ba, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 
  0xd1b5, 0xd1b5, 0xf7ba, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 
  0xd1b5, 0xd1b5, 0xd1b5, 0xf7ba, 0xd1b5, 0xd1b5, 0xd1b5, 
  0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xf7ba, 0xd1b5, 0xd1b5, 
  0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xf7ba, 0xd1b5, 0xd1b5, 
  0xd1b5, 0xd1b5, 0xd1b5, 0xf7ba, 0xd1b5, 0xd1b5, 0xd1b5, 
  0xd1b5, 0xd1b5, 0x842d, 0x842d, 0x842d, 0xd1b5, 0xd1b5
};

const uint16_t IMAGE_CHIMERE[] = {
  7,      // frame width
  10,     // frame height
  4,      // number of frames
  4,      // animation speed
  0xd1b5, // transparent color
  0,      // RGB565 color mode
  // frame 1/4
  0xd1b5, 0x842d, 0x842d, 0x842d, 0xd1b5, 0xd1b5, 0xd1b5, 
  0x842d, 0x842d, 0x842d, 0x842d, 0x842d, 0xd1b5, 0xd1b5, 
  0xd1b5, 0xf800, 0xd1b5, 0xf800, 0xd1b5, 0xd1b5, 0xd1b5, 
  0x842d, 0x842d, 0x842d, 0x842d, 0x842d, 0xd1b5, 0xd1b5, 
  0xd1b5, 0x842d, 0x842d, 0x842d, 0xd1b5, 0xd1b5, 0xd1b5, 
  0xd1b5, 0xd1b5, 0xffff, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 
  0xd1b5, 0xd1b5, 0xd1b5, 0xffff, 0xd1b5, 0xd1b5, 0xd1b5, 
  0xd1b5, 0xd1b5, 0xd1b5, 0xffff, 0xd1b5, 0xd1b5, 0xd1b5, 
  0xd1b5, 0xffff, 0xd1b5, 0xffff, 0xd1b5, 0xd1b5, 0xd1b5, 
  0xd1b5, 0xd1b5, 0xf7ba, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 
  // frame 2/4
  0xd1b5, 0xd1b5, 0x842d, 0x842d, 0x842d, 0xd1b5, 0xd1b5, 
  0xd1b5, 0x842d, 0x842d, 0x842d, 0x842d, 0x842d, 0xd1b5, 
  0xd1b5, 0xd1b5, 0xf800, 0xd1b5, 0xf800, 0xd1b5, 0xd1b5, 
  0xd1b5, 0x842d, 0x842d, 0x842d, 0x842d, 0x842d, 0xd1b5, 
  0xd1b5, 0xd1b5, 0x842d, 0x842d, 0x842d, 0xd1b5, 0xd1b5, 
  0xd1b5, 0xd1b5, 0xd1b5, 0xffff, 0xd1b5, 0xd1b5, 0xd1b5, 
  0xd1b5, 0xd1b5, 0xd1b5, 0xffff, 0xd1b5, 0xd1b5, 0xd1b5, 
  0xd1b5, 0xd1b5, 0xd1b5, 0xffff, 0xd1b5, 0xd1b5, 0xd1b5, 
  0xd1b5, 0xd1b5, 0xd1b5, 0xffff, 0xd1b5, 0xd1b5, 0xd1b5, 
  0xd1b5, 0xd1b5, 0xd1b5, 0xf7ba, 0xd1b5, 0xd1b5, 0xd1b5, 
  // frame 3/4
  0xd1b5, 0xd1b5, 0xd1b5, 0x842d, 0x842d, 0x842d, 0xd1b5, 
  0xd1b5, 0xd1b5, 0x842d, 0x842d, 0x842d, 0x842d, 0x842d, 
  0xd1b5, 0xd1b5, 0xd1b5, 0xf800, 0xd1b5, 0xf800, 0xd1b5, 
  0xd1b5, 0xd1b5, 0x842d, 0x842d, 0x842d, 0x842d, 0x842d, 
  0xd1b5, 0xd1b5, 0xd1b5, 0x842d, 0x842d, 0x842d, 0xd1b5, 
  0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xffff, 0xd1b5, 0xd1b5, 
  0xd1b5, 0xd1b5, 0xd1b5, 0xffff, 0xd1b5, 0xd1b5, 0xd1b5, 
  0xd1b5, 0xd1b5, 0xd1b5, 0xffff, 0xd1b5, 0xd1b5, 0xd1b5, 
  0xd1b5, 0xd1b5, 0xd1b5, 0xffff, 0xd1b5, 0xffff, 0xd1b5, 
  0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xf7ba, 0xd1b5, 0xd1b5, 
  // frame 4/4
  0xd1b5, 0xd1b5, 0x842d, 0x842d, 0x842d, 0xd1b5, 0xd1b5, 
  0xd1b5, 0x842d, 0x842d, 0x842d, 0x842d, 0x842d, 0xd1b5, 
  0xd1b5, 0xd1b5, 0xf800, 0xd1b5, 0xf800, 0xd1b5, 0xd1b5, 
  0xd1b5, 0x842d, 0x842d, 0x842d, 0x842d, 0x842d, 0xd1b5, 
  0xd1b5, 0xd1b5, 0x842d, 0x842d, 0x842d, 0xd1b5, 0xd1b5, 
  0xd1b5, 0xd1b5, 0xd1b5, 0xffff, 0xd1b5, 0xd1b5, 0xd1b5, 
  0xd1b5, 0xd1b5, 0xd1b5, 0xffff, 0xd1b5, 0xd1b5, 0xd1b5, 
  0xd1b5, 0xd1b5, 0xd1b5, 0xffff, 0xd1b5, 0xd1b5, 0xd1b5, 
  0xd1b5, 0xd1b5, 0xd1b5, 0xffff, 0xd1b5, 0xd1b5, 0xd1b5, 
  0xd1b5, 0xd1b5, 0xd1b5, 0xffff, 0xd1b5, 0xd1b5, 0xd1b5
};

const uint16_t IMAGE_KNIGHT[] = {
  7,      // frame width
  10,     // frame height
  4,      // number of frames
  4,      // animation speed
  0xd1b5, // transparent color
  0,      // RGB565 color mode
  // frame 1/4
  0xd1b5, 0xd1b5, 0xffff, 0xffff, 0xffff, 0xd1b5, 0xd1b5, 
  0xd1b5, 0xd1b5, 0x842d, 0x842d, 0x842d, 0xd1b5, 0xd1b5, 
  0xd1b5, 0xd1b5, 0xffff, 0x842d, 0xffff, 0xd1b5, 0xd1b5, 
  0xd1b5, 0xd1b5, 0xd1b5, 0xffff, 0xd1b5, 0xd1b5, 0xd1b5, 
  0xd1b5, 0x842d, 0x842d, 0x842d, 0x842d, 0x842d, 0xd1b5, 
  0xffff, 0xd1b5, 0x39e7, 0x842d, 0x842d, 0xd1b5, 0xffff, 
  0x842d, 0x39e7, 0x39e7, 0x39e7, 0x39e7, 0x39e7, 0x39e7, 
  0xd1b5, 0xd1b5, 0x39e7, 0xd1b5, 0xffff, 0xd1b5, 0xd1b5, 
  0xd1b5, 0xd1b5, 0x842d, 0xd1b5, 0x842d, 0xd1b5, 0xd1b5, 
  0xd1b5, 0xd1b5, 0x842d, 0xd1b5, 0x842d, 0xd1b5, 0xd1b5, 
  // frame 2/4
  0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 
  0xd1b5, 0xd1b5, 0xffff, 0xffff, 0xffff, 0xd1b5, 0xd1b5, 
  0xd1b5, 0xd1b5, 0x842d, 0x842d, 0x842d, 0xd1b5, 0xd1b5, 
  0xd1b5, 0xd1b5, 0xffff, 0x842d, 0xffff, 0xd1b5, 0xd1b5, 
  0xffff, 0x842d, 0x39e7, 0x842d, 0x842d, 0x842d, 0xd1b5, 
  0x842d, 0x39e7, 0x39e7, 0x39e7, 0x39e7, 0x39e7, 0x39e7, 
  0xd1b5, 0xd1b5, 0x39e7, 0x842d, 0xffff, 0xd1b5, 0x842d, 
  0xd1b5, 0xd1b5, 0xffff, 0xd1b5, 0xffff, 0xd1b5, 0xd1b5, 
  0xd1b5, 0xd1b5, 0x842d, 0xd1b5, 0x842d, 0xd1b5, 0xd1b5, 
  0xd1b5, 0xd1b5, 0x842d, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 
  // frame 3/4
  0xd1b5, 0xd1b5, 0xffff, 0xffff, 0xffff, 0xd1b5, 0xd1b5, 
  0xd1b5, 0xd1b5, 0x842d, 0x842d, 0x842d, 0xd1b5, 0xd1b5, 
  0xd1b5, 0xd1b5, 0xffff, 0x842d, 0xffff, 0xd1b5, 0xd1b5, 
  0xd1b5, 0xd1b5, 0xd1b5, 0xffff, 0xd1b5, 0xd1b5, 0xd1b5, 
  0xd1b5, 0x842d, 0x842d, 0x842d, 0x842d, 0x842d, 0xd1b5, 
  0xffff, 0xd1b5, 0x39e7, 0x842d, 0x842d, 0xd1b5, 0xffff, 
  0x842d, 0x39e7, 0x39e7, 0x39e7, 0x39e7, 0x39e7, 0x39e7, 
  0xd1b5, 0xd1b5, 0x39e7, 0xd1b5, 0xffff, 0xd1b5, 0xd1b5, 
  0xd1b5, 0xd1b5, 0x842d, 0xd1b5, 0x842d, 0xd1b5, 0xd1b5, 
  0xd1b5, 0xd1b5, 0x842d, 0xd1b5, 0x842d, 0xd1b5, 0xd1b5, 
  // frame 4/4
  0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 
  0xd1b5, 0xd1b5, 0xffff, 0xffff, 0xffff, 0xd1b5, 0xd1b5, 
  0xd1b5, 0xd1b5, 0x842d, 0x842d, 0x842d, 0xd1b5, 0xd1b5, 
  0xd1b5, 0xd1b5, 0xffff, 0x842d, 0xffff, 0xd1b5, 0xd1b5, 
  0xffff, 0x842d, 0x39e7, 0x842d, 0x842d, 0x842d, 0xd1b5, 
  0x842d, 0x39e7, 0x39e7, 0x39e7, 0x39e7, 0x39e7, 0x39e7, 
  0xd1b5, 0xd1b5, 0x39e7, 0x842d, 0xffff, 0xd1b5, 0x842d, 
  0xd1b5, 0xd1b5, 0xffff, 0xd1b5, 0xffff, 0xd1b5, 0xd1b5, 
  0xd1b5, 0xd1b5, 0x842d, 0xd1b5, 0x842d, 0xd1b5, 0xd1b5, 
  0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0x842d, 0xd1b5, 0xd1b5
};

const uint16_t IMAGE_GARGOYLEL[] = {
  7,      // frame width
  10,     // frame height
  4,      // number of frames
  4,      // animation speed
  0xd1b5, // transparent color
  0,      // RGB565 color mode
  // frame 1/4
  0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 
  0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0x842d, 0xd1b5, 0xd1b5, 
  0xd1b5, 0xd1b5, 0xf800, 0xffff, 0x842d, 0x842d, 0xd1b5, 
  0xd1b5, 0xffff, 0xffff, 0xffff, 0x842d, 0x39e7, 0x842d, 
  0xd1b5, 0xd1b5, 0xd1b5, 0x842d, 0x39e7, 0x39e7, 0x842d, 
  0xd1b5, 0xd1b5, 0xd1b5, 0xffff, 0x842d, 0x39e7, 0x842d, 
  0xd1b5, 0xd1b5, 0xffff, 0xffff, 0xffff, 0x842d, 0x842d, 
  0xd1b5, 0xd1b5, 0xffff, 0x842d, 0xffff, 0x842d, 0x842d, 
  0xd1b5, 0xd1b5, 0xd1b5, 0xffff, 0xd1b5, 0x842d, 0x842d, 
  0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0x842d, 
  // frame 2/4
  0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 
  0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0x842d, 0xd1b5, 0xd1b5, 
  0xd1b5, 0xf800, 0xffff, 0xd1b5, 0x842d, 0x842d, 0xd1b5, 
  0xffff, 0xffff, 0xffff, 0xffff, 0x842d, 0x842d, 0xd1b5, 
  0xd1b5, 0xd1b5, 0xd1b5, 0x842d, 0x39e7, 0x842d, 0xd1b5, 
  0xd1b5, 0xd1b5, 0xd1b5, 0xffff, 0x842d, 0x842d, 0xd1b5, 
  0xd1b5, 0x842d, 0x842d, 0xffff, 0xffff, 0x842d, 0xd1b5, 
  0xd1b5, 0xd1b5, 0xffff, 0xffff, 0xffff, 0x842d, 0xd1b5, 
  0xd1b5, 0xd1b5, 0xd1b5, 0xffff, 0x842d, 0x842d, 0xd1b5, 
  0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0x842d, 0x842d, 0xd1b5, 
  // frame 3/4
  0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 
  0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0x842d, 0xd1b5, 0xd1b5, 
  0xd1b5, 0xd1b5, 0xf800, 0xffff, 0x842d, 0x842d, 0xd1b5, 
  0xd1b5, 0xffff, 0xffff, 0xffff, 0x842d, 0x39e7, 0x842d, 
  0xd1b5, 0xd1b5, 0xd1b5, 0x842d, 0x39e7, 0x39e7, 0x842d, 
  0xd1b5, 0xd1b5, 0xd1b5, 0xffff, 0x842d, 0x39e7, 0x842d, 
  0xd1b5, 0xd1b5, 0xffff, 0xffff, 0xffff, 0x842d, 0x842d, 
  0xd1b5, 0xd1b5, 0xffff, 0x842d, 0xffff, 0x842d, 0x842d, 
  0xd1b5, 0xd1b5, 0xd1b5, 0xffff, 0xd1b5, 0x842d, 0x842d, 
  0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0x842d, 
  // frame 4/4
  0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 
  0xd1b5, 0xd1b5, 0xf800, 0xffff, 0x842d, 0xd1b5, 0xd1b5, 
  0xd1b5, 0xffff, 0xffff, 0xffff, 0x842d, 0x842d, 0xd1b5, 
  0xd1b5, 0xd1b5, 0xd1b5, 0xffff, 0x842d, 0x842d, 0xd1b5, 
  0xd1b5, 0xd1b5, 0xd1b5, 0x842d, 0x39e7, 0x842d, 0xd1b5, 
  0xd1b5, 0xd1b5, 0xd1b5, 0xffff, 0x842d, 0x842d, 0xd1b5, 
  0xd1b5, 0x842d, 0x842d, 0xffff, 0xffff, 0x842d, 0xd1b5, 
  0xd1b5, 0xd1b5, 0xffff, 0xffff, 0xffff, 0x842d, 0xd1b5, 
  0xd1b5, 0xd1b5, 0xd1b5, 0xffff, 0x842d, 0x842d, 0xd1b5, 
  0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0x842d, 0x842d, 0xd1b5
};

const uint16_t IMAGE_GARGOYLER[] = {
  7,      // frame width
  10,     // frame height
  4,      // number of frames
  4,      // animation speed
  0xd1b5, // transparent color
  0,      // RGB565 color mode
  // frame 1/4
  0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 
  0xd1b5, 0xd1b5, 0x842d, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 
  0xd1b5, 0x842d, 0x842d, 0xffff, 0xf800, 0xd1b5, 0xd1b5, 
  0x842d, 0x39e7, 0x842d, 0xffff, 0xffff, 0xffff, 0xd1b5, 
  0x842d, 0x39e7, 0x39e7, 0x842d, 0xd1b5, 0xd1b5, 0xd1b5, 
  0x842d, 0x39e7, 0x842d, 0xffff, 0xd1b5, 0xd1b5, 0xd1b5, 
  0x842d, 0x842d, 0xffff, 0xffff, 0xffff, 0xd1b5, 0xd1b5, 
  0x842d, 0x842d, 0xffff, 0x842d, 0xffff, 0xd1b5, 0xd1b5, 
  0x842d, 0x842d, 0xd1b5, 0xffff, 0xd1b5, 0xd1b5, 0xd1b5, 
  0x842d, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 
  // frame 2/4
  0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 
  0xd1b5, 0xd1b5, 0x842d, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 
  0xd1b5, 0x842d, 0x842d, 0xd1b5, 0xffff, 0xf800, 0xd1b5, 
  0xd1b5, 0x842d, 0x842d, 0xffff, 0xffff, 0xffff, 0xffff, 
  0xd1b5, 0x842d, 0x39e7, 0x842d, 0xd1b5, 0xd1b5, 0xd1b5, 
  0xd1b5, 0x842d, 0x842d, 0xffff, 0xd1b5, 0xd1b5, 0xd1b5, 
  0xd1b5, 0x842d, 0xffff, 0xffff, 0x842d, 0x842d, 0xd1b5, 
  0xd1b5, 0x842d, 0xffff, 0xffff, 0xffff, 0xd1b5, 0xd1b5, 
  0xd1b5, 0x842d, 0x842d, 0xffff, 0xd1b5, 0xd1b5, 0xd1b5, 
  0xd1b5, 0x842d, 0x842d, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 
  // frame 3/4
  0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 
  0xd1b5, 0xd1b5, 0x842d, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 
  0xd1b5, 0x842d, 0x842d, 0xffff, 0xf800, 0xd1b5, 0xd1b5, 
  0x842d, 0x39e7, 0x842d, 0xffff, 0xffff, 0xffff, 0xd1b5, 
  0x842d, 0x39e7, 0x39e7, 0x842d, 0xd1b5, 0xd1b5, 0xd1b5, 
  0x842d, 0x39e7, 0x842d, 0xffff, 0xd1b5, 0xd1b5, 0xd1b5, 
  0x842d, 0x842d, 0xffff, 0xffff, 0xffff, 0xd1b5, 0xd1b5, 
  0x842d, 0x842d, 0xffff, 0x842d, 0xffff, 0xd1b5, 0xd1b5, 
  0x842d, 0x842d, 0xd1b5, 0xffff, 0xd1b5, 0xd1b5, 0xd1b5, 
  0x842d, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 
  // frame 4/4
  0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 
  0xd1b5, 0xd1b5, 0x842d, 0xffff, 0xf800, 0xd1b5, 0xd1b5, 
  0xd1b5, 0x842d, 0x842d, 0xffff, 0xffff, 0xffff, 0xd1b5, 
  0xd1b5, 0x842d, 0x842d, 0xffff, 0xd1b5, 0xd1b5, 0xd1b5, 
  0xd1b5, 0x842d, 0x39e7, 0x842d, 0xd1b5, 0xd1b5, 0xd1b5, 
  0xd1b5, 0x842d, 0x842d, 0xffff, 0xd1b5, 0xd1b5, 0xd1b5, 
  0xd1b5, 0x842d, 0xffff, 0xffff, 0x842d, 0x842d, 0xd1b5, 
  0xd1b5, 0x842d, 0xffff, 0xffff, 0xffff, 0xd1b5, 0xd1b5, 
  0xd1b5, 0x842d, 0x842d, 0xffff, 0xd1b5, 0xd1b5, 0xd1b5, 
  0xd1b5, 0x842d, 0x842d, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5
};

const uint16_t IMAGE_GUARDIAN[] = {
  7,      // frame width
  10,     // frame height
  4,      // number of frames
  4,      // animation speed
  0xd1b5, // transparent color
  0,      // RGB565 color mode
  // frame 1/4
  0xd1b5, 0xd1b5, 0xffff, 0xd1b5, 0xffff, 0xd1b5, 0xd1b5, 
  0x39e7, 0xd1b5, 0xffff, 0xffff, 0xffff, 0xd1b5, 0xd1b5, 
  0x39e7, 0xffff, 0xf800, 0x0000, 0xf800, 0xffff, 0xd1b5, 
  0x39e7, 0xd1b5, 0xffff, 0x0000, 0xffff, 0xd1b5, 0xd1b5, 
  0x39e7, 0x842d, 0xffff, 0x0000, 0xffff, 0x842d, 0xd1b5, 
  0x39e7, 0x842d, 0x842d, 0x39e7, 0x39e7, 0x39e7, 0x39e7, 
  0x39e7, 0xd1b5, 0x842d, 0x842d, 0x39e7, 0x39e7, 0xd1b5, 
  0x39e7, 0xd1b5, 0xffff, 0xffff, 0x39e7, 0x39e7, 0xd1b5, 
  0x39e7, 0xd1b5, 0xffff, 0xd1b5, 0xffff, 0xd1b5, 0xd1b5, 
  0xd1b5, 0xd1b5, 0x842d, 0xd1b5, 0x842d, 0xd1b5, 0xd1b5,
  // frame 2/4 
  0xd1b5, 0xd1b5, 0xffff, 0xd1b5, 0xffff, 0xd1b5, 0xd1b5, 
  0xd1b5, 0xd1b5, 0xffff, 0xffff, 0xffff, 0xd1b5, 0xd1b5, 
  0x39e7, 0xffff, 0xf800, 0x0000, 0xf800, 0xffff, 0xd1b5, 
  0x39e7, 0xd1b5, 0xffff, 0x0000, 0xffff, 0xd1b5, 0xd1b5, 
  0x39e7, 0xd1b5, 0xffff, 0x39e7, 0x39e7, 0x39e7, 0x39e7, 
  0x39e7, 0xd1b5, 0x842d, 0x842d, 0x39e7, 0x39e7, 0xd1b5, 
  0x39e7, 0x842d, 0x842d, 0x842d, 0x39e7, 0x39e7, 0xd1b5, 
  0x39e7, 0xd1b5, 0xffff, 0xffff, 0xffff, 0xd1b5, 0xd1b5, 
  0x39e7, 0xd1b5, 0xffff, 0xd1b5, 0xffff, 0xd1b5, 0xd1b5, 
  0x39e7, 0xd1b5, 0x842d, 0xd1b5, 0x842d, 0xd1b5, 0xd1b5, 
  // frame 3/4
  0xd1b5, 0xd1b5, 0xffff, 0xd1b5, 0xffff, 0xd1b5, 0xd1b5, 
  0x39e7, 0xd1b5, 0xffff, 0xffff, 0xffff, 0xd1b5, 0xd1b5, 
  0x39e7, 0xffff, 0xf800, 0x0000, 0xf800, 0xffff, 0xd1b5, 
  0x39e7, 0xd1b5, 0xffff, 0x0000, 0xffff, 0xd1b5, 0xd1b5, 
  0x39e7, 0x842d, 0xffff, 0x0000, 0xffff, 0x842d, 0xd1b5, 
  0x39e7, 0x842d, 0x842d, 0x39e7, 0x39e7, 0x39e7, 0x39e7, 
  0x39e7, 0xd1b5, 0x842d, 0x842d, 0x39e7, 0x39e7, 0xd1b5, 
  0x39e7, 0xd1b5, 0xffff, 0xffff, 0x39e7, 0x39e7, 0xd1b5, 
  0x39e7, 0xd1b5, 0xffff, 0xd1b5, 0xffff, 0xd1b5, 0xd1b5, 
  0xd1b5, 0xd1b5, 0x842d, 0xd1b5, 0x842d, 0xd1b5, 0xd1b5,
  // frame 4/4 
  0x39e7, 0xd1b5, 0xffff, 0xd1b5, 0xffff, 0xd1b5, 0xd1b5, 
  0x39e7, 0xd1b5, 0xffff, 0xffff, 0xffff, 0xd1b5, 0xd1b5, 
  0x39e7, 0xffff, 0xf800, 0x0000, 0xf800, 0xffff, 0xd1b5, 
  0x39e7, 0xd1b5, 0xffff, 0x0000, 0xffff, 0xd1b5, 0xd1b5, 
  0x39e7, 0xd1b5, 0xffff, 0x0000, 0xffff, 0xd1b5, 0xd1b5, 
  0x39e7, 0x842d, 0x842d, 0x842d, 0x842d, 0x842d, 0xd1b5, 
  0x39e7, 0xd1b5, 0x842d, 0x39e7, 0x39e7, 0x39e7, 0x39e7, 
  0x39e7, 0xd1b5, 0xffff, 0xffff, 0x39e7, 0x39e7, 0xd1b5, 
  0xd1b5, 0xd1b5, 0xffff, 0xd1b5, 0x39e7, 0x39e7, 0xd1b5, 
  0xd1b5, 0xd1b5, 0x842d, 0xd1b5, 0x842d, 0xd1b5, 0xd1b5
};

const uint16_t IMAGE_WRAITHL[] = {
  7,      // frame width
  10,     // frame height
  4,      // number of frames
  4,      // animation speed
  0xd1b5, // transparent color
  0,      // RGB565 color mode
  // frame 1/4
  0xd1b5, 0xffff, 0xffff, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 
  0xffff, 0xffff, 0xffff, 0xffff, 0xd1b5, 0xd1b5, 0xd1b5, 
  0xd1b5, 0xf800, 0x0000, 0xffff, 0xd1b5, 0xd1b5, 0xd1b5, 
  0xd1b5, 0x0000, 0x0000, 0xffff, 0xd1b5, 0xd1b5, 0xd1b5, 
  0xd1b5, 0xd1b5, 0xffff, 0x842d, 0xffff, 0xd1b5, 0xd1b5, 
  0xd1b5, 0xd1b5, 0xffff, 0x842d, 0xffff, 0xd1b5, 0xd1b5, 
  0xd1b5, 0xd1b5, 0xffff, 0x842d, 0xffff, 0xffff, 0xd1b5, 
  0xd1b5, 0xd1b5, 0xd1b5, 0xffff, 0xffff, 0xffff, 0xd1b5, 
  0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xffff, 0xd1b5, 0xd1b5, 
  0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5,
  // frame 2/4  
  0xd1b5, 0xd1b5, 0xffff, 0xffff, 0xd1b5, 0xd1b5, 0xd1b5, 
  0xd1b5, 0xffff, 0xffff, 0xffff, 0xffff, 0xd1b5, 0xd1b5, 
  0xd1b5, 0xd1b5, 0xf800, 0x0000, 0xffff, 0xd1b5, 0xd1b5, 
  0xd1b5, 0xd1b5, 0x0000, 0x0000, 0xffff, 0xd1b5, 0xd1b5, 
  0xd1b5, 0xd1b5, 0xffff, 0x842d, 0xffff, 0xd1b5, 0xd1b5, 
  0xd1b5, 0xd1b5, 0xffff, 0x842d, 0xffff, 0xd1b5, 0xd1b5, 
  0xd1b5, 0x842d, 0x842d, 0xffff, 0xffff, 0xffff, 0xd1b5, 
  0xd1b5, 0xd1b5, 0xd1b5, 0xffff, 0xffff, 0xffff, 0xd1b5, 
  0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xffff, 0xd1b5, 
  0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 
  // frame 3/4 
  0xd1b5, 0xffff, 0xffff, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 
  0xffff, 0xffff, 0xffff, 0xffff, 0xd1b5, 0xd1b5, 0xd1b5, 
  0xd1b5, 0xf800, 0x0000, 0xffff, 0xd1b5, 0xd1b5, 0xd1b5, 
  0xd1b5, 0x0000, 0x0000, 0xffff, 0xd1b5, 0xd1b5, 0xd1b5, 
  0xd1b5, 0xd1b5, 0xffff, 0x842d, 0xffff, 0xd1b5, 0xd1b5, 
  0xd1b5, 0xd1b5, 0xffff, 0x842d, 0xffff, 0xd1b5, 0xd1b5, 
  0xd1b5, 0xd1b5, 0xffff, 0x842d, 0xffff, 0xffff, 0xd1b5, 
  0xd1b5, 0xd1b5, 0xd1b5, 0xffff, 0xffff, 0xffff, 0xd1b5, 
  0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xffff, 0xd1b5, 0xd1b5, 
  0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 
  // frame 4/4 
  0xd1b5, 0xd1b5, 0xffff, 0xffff, 0xd1b5, 0xd1b5, 0xd1b5, 
  0xd1b5, 0xffff, 0xffff, 0xffff, 0xffff, 0xd1b5, 0xd1b5, 
  0xd1b5, 0xd1b5, 0xf800, 0x0000, 0xffff, 0xd1b5, 0xd1b5, 
  0xd1b5, 0xd1b5, 0x0000, 0x0000, 0xffff, 0xd1b5, 0xd1b5, 
  0xd1b5, 0xd1b5, 0xffff, 0x842d, 0xffff, 0xd1b5, 0xd1b5, 
  0xd1b5, 0xd1b5, 0xffff, 0x842d, 0xffff, 0xd1b5, 0xd1b5, 
  0xd1b5, 0xd1b5, 0x842d, 0x842d, 0xffff, 0xffff, 0xd1b5, 
  0xd1b5, 0xd1b5, 0xd1b5, 0xffff, 0xffff, 0xffff, 0xd1b5, 
  0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xffff, 0xd1b5, 
  0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5
};

const uint16_t IMAGE_WRAITHR[] = {
  7,      // frame width
  10,     // frame height
  4,      // number of frames
  4,      // animation speed
  0xd1b5, // transparent color
  0,      // RGB565 color mode
  // frame 1/4
  0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xffff, 0xffff, 0xd1b5, 
  0xd1b5, 0xd1b5, 0xd1b5, 0xffff, 0xffff, 0xffff, 0xffff, 
  0xd1b5, 0xd1b5, 0xd1b5, 0xffff, 0x0000, 0xf800, 0xd1b5, 
  0xd1b5, 0xd1b5, 0xd1b5, 0xffff, 0x0000, 0x0000, 0xd1b5, 
  0xd1b5, 0xd1b5, 0xffff, 0x842d, 0xffff, 0xd1b5, 0xd1b5, 
  0xd1b5, 0xd1b5, 0xffff, 0x842d, 0xffff, 0xd1b5, 0xd1b5, 
  0xd1b5, 0xffff, 0xffff, 0x842d, 0xffff, 0xd1b5, 0xd1b5, 
  0xd1b5, 0xffff, 0xffff, 0xffff, 0xd1b5, 0xd1b5, 0xd1b5, 
  0xd1b5, 0xd1b5, 0xffff, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 
  0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5,
  // frame 2/4 
  0xd1b5, 0xd1b5, 0xd1b5, 0xffff, 0xffff, 0xd1b5, 0xd1b5, 
  0xd1b5, 0xd1b5, 0xffff, 0xffff, 0xffff, 0xffff, 0xd1b5, 
  0xd1b5, 0xd1b5, 0xffff, 0x0000, 0xf800, 0xd1b5, 0xd1b5, 
  0xd1b5, 0xd1b5, 0xffff, 0x0000, 0x0000, 0xd1b5, 0xd1b5, 
  0xd1b5, 0xd1b5, 0xffff, 0x842d, 0xffff, 0xd1b5, 0xd1b5, 
  0xd1b5, 0xd1b5, 0xffff, 0x842d, 0xffff, 0xd1b5, 0xd1b5, 
  0xd1b5, 0xffff, 0xffff, 0xffff, 0x842d, 0x842d, 0xd1b5, 
  0xd1b5, 0xffff, 0xffff, 0xffff, 0xd1b5, 0xd1b5, 0xd1b5, 
  0xd1b5, 0xffff, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 
  0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5,
  // frame 3/4 
  0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xffff, 0xffff, 0xd1b5, 
  0xd1b5, 0xd1b5, 0xd1b5, 0xffff, 0xffff, 0xffff, 0xffff, 
  0xd1b5, 0xd1b5, 0xd1b5, 0xffff, 0x0000, 0xf800, 0xd1b5, 
  0xd1b5, 0xd1b5, 0xd1b5, 0xffff, 0x0000, 0x0000, 0xd1b5, 
  0xd1b5, 0xd1b5, 0xffff, 0x842d, 0xffff, 0xd1b5, 0xd1b5, 
  0xd1b5, 0xd1b5, 0xffff, 0x842d, 0xffff, 0xd1b5, 0xd1b5, 
  0xd1b5, 0xffff, 0xffff, 0x842d, 0xffff, 0xd1b5, 0xd1b5, 
  0xd1b5, 0xffff, 0xffff, 0xffff, 0xd1b5, 0xd1b5, 0xd1b5, 
  0xd1b5, 0xd1b5, 0xffff, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 
  0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5,
  // frame 4/4 
  0xd1b5, 0xd1b5, 0xd1b5, 0xffff, 0xffff, 0xd1b5, 0xd1b5, 
  0xd1b5, 0xd1b5, 0xffff, 0xffff, 0xffff, 0xffff, 0xd1b5, 
  0xd1b5, 0xd1b5, 0xffff, 0x0000, 0xf800, 0xd1b5, 0xd1b5, 
  0xd1b5, 0xd1b5, 0xffff, 0x0000, 0x0000, 0xd1b5, 0xd1b5, 
  0xd1b5, 0xd1b5, 0xffff, 0x842d, 0xffff, 0xd1b5, 0xd1b5, 
  0xd1b5, 0xd1b5, 0xffff, 0x842d, 0xffff, 0xd1b5, 0xd1b5, 
  0xd1b5, 0xffff, 0xffff, 0x842d, 0x842d, 0xd1b5, 0xd1b5, 
  0xd1b5, 0xffff, 0xffff, 0xffff, 0xd1b5, 0xd1b5, 0xd1b5, 
  0xd1b5, 0xffff, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 
  0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5, 0xd1b5
};

Image GhostR(IMAGE_GHOSTR);
Image GhostL(IMAGE_GHOSTL);
Image Skeleton(IMAGE_SKELETON);
Image Spectre(IMAGE_SPECTRE);
Image SnakeL(IMAGE_SNAKEL);
Image SnakeR(IMAGE_SNAKER);
Image Chimere(IMAGE_CHIMERE);
Image Knight(IMAGE_KNIGHT);
Image GargoyleL(IMAGE_GARGOYLEL);
Image GargoyleR(IMAGE_GARGOYLER);
Image Guardian(IMAGE_GUARDIAN);
Image WraithL(IMAGE_WRAITHL);
Image WraithR(IMAGE_WRAITHR);

//Language strings

const MultiLang newGameStr[] = {
  { LANG_EN, "NEW GAME" },
  { LANG_FR, "NOUVELLE PARTIE" },
  { LANG_DE, "NEUES SPIEL" },
};

const MultiLang newHighScoreStr[] = {
  { LANG_EN, "SCORES" },
  { LANG_FR, "LES SCORES" },
  { LANG_DE, "PARTITUR" },
};

const MultiLang returnStr[] = {
  { LANG_EN, "RETURN" },
  { LANG_FR, "RETOUR" },
  { LANG_DE, "ZURUCK" },
};

const MultiLang quitStr[] = {
  { LANG_EN, "QUIT" },
  { LANG_FR, "QUITTER" },
  { LANG_DE, "VERLASSEN" },
};

const MultiLang gameScoreStr[] = {
  { LANG_EN, "GAME SCORE" },
  { LANG_FR, "SCORE DE JEU" },
  { LANG_DE, "SPIELSTAND" },
};

const MultiLang gameOverStr[] = {
  { LANG_EN, "GAME OVER" },
  { LANG_FR, "JEU TERMINE" },
  { LANG_DE, "SPIEL IST AUS" },
};

const MultiLang highScoreStr[] = {
  { LANG_EN, "NEW SCORE!" },
  { LANG_FR, "NOUVEAU SCORE!" },
  { LANG_DE, "NEUE PUNKTE!" },
};

const MultiLang victoryStr[] = {
  { LANG_EN, "VICTORY!" },
  { LANG_FR, "LA VICTOIRE!" },
  { LANG_DE, "SIEG!" },
};

//----------------------Chamber draw--------------

void drawChamber(uint8_t displayPlan[114])
{
  int index=24;
  int Width=displayPlan[0];
  int Height=displayPlan[1];
  for(int i=0;i<Width;i++)
  {
    for(int j=0;j<Height;j++)
    {
      if(displayPlan[index]==1)
      {
        gb.display.drawImage(j*8,i*6,IMAGE_WALL1);
      }
      else if(displayPlan[index]==2)
      {
        gb.display.drawImage(j*8,i*6,IMAGE_FLOOR1); 
      }
      else if(displayPlan[index]==3)
      {
        gb.display.drawImage(j*8,i*6,IMAGE_BARS); 
      }
      else if(displayPlan[index]==4)
      {
        gb.display.drawImage(j*8,i*6,IMAGE_HOLE); 
      }
      else if(displayPlan[index]==5)
      {
        gb.display.drawImage(j*8,i*6,IMAGE_WALL2); 
      }
      else if(displayPlan[index]==6)
      {
        gb.display.drawImage(j*8,i*6,IMAGE_WALL3); 
      }
      else if(displayPlan[index]==7)
      {
        gb.display.drawImage(j*8,i*6,Gate); 
      }
      else if(displayPlan[index]==11)
      {
        gb.display.drawImage(j*8,i*6,IMAGE_WOOD_PILLAR_LEFT); 
      }
      else if(displayPlan[index]==12)
      {
        gb.display.drawImage(j*8,i*6,IMAGE_WOOD_PILLAR_CENTER); 
      }
      else if(displayPlan[index]==13)
      {
        gb.display.drawImage(j*8,i*6,IMAGE_WOOD_PILLAR_RIGHT); 
      }
      else if(displayPlan[index]==14)
      {
        gb.display.drawImage(j*8,i*6,IMAGE_WOOD_LEFT_CORNER); 
      }
      else if(displayPlan[index]==15)
      {
        gb.display.drawImage(j*8,i*6,IMAGE_WOOD_CENTER); 
      }
      else if(displayPlan[index]==16)
      {
        gb.display.drawImage(j*8,i*6,IMAGE_WOOD_RIGHT_CORNER); 
      }
      else if(displayPlan[index]==17)
      {
        gb.display.drawImage(j*8,i*6,IMAGE_WOOD_UP); 
      }
      else if(displayPlan[index]==20)
      {
        gb.display.drawImage(j*8,i*6,IMAGE_LADDER1);
      }
      else if(displayPlan[index]==30)
      {
        gb.display.drawImage(j*8,i*6,IMAGE_DIAMOND_UP);
      }
      else if(displayPlan[index]==31)
      {
        gb.display.drawImage(j*8,i*6,IMAGE_DIAMOND_DOWN);
      }
      else if(displayPlan[index]==32)
      {
        gb.display.drawImage(j*8,i*6,IMAGE_CUP_UP);
      }
      else if(displayPlan[index]==33)
      {
        gb.display.drawImage(j*8,i*6,IMAGE_CUP_BASE);
      }
      else if(displayPlan[index]==34)
      {
        gb.display.drawImage(j*8,i*6,IMAGE_POWER_UP);
      }
      else if(displayPlan[index]==35)
      {
        gb.display.drawImage(j*8,i*6,IMAGE_POWER_BASE);
      }
      index++;
    }
  }
}

void drawGUI(int8_t playerHP,uint8_t enemyHP,int8_t lore, int8_t keys)
{
  gb.display.setCursor(0, 5);
  gb.display.setFontSize(1);
  gb.display.setColor(WHITE);
  gb.display.drawImage(0,55,IMAGE_HEALTH);
  gb.display.setColor(RED);
  for(int i=0;i<playerHP;i++)
  {
    gb.display.drawImage(6+(i*2),57,IMAGE_HBAR);  
  }
  gb.display.drawImage(0,60,IMAGE_SKULL);
  gb.display.setColor(WHITE);
  for(int i=0;i<enemyHP;i++)
  {
    gb.display.drawImage(6+(i*3),61,IMAGE_EBAR);  
  }
  gb.display.drawImage(57,57,IMAGE_POWER);
  gb.display.setColor(BLUE);
  gb.display.setCursor(62,57);
  gb.display.println(lore);
  gb.display.drawImage(66,57,IMAGE_KEY);
  gb.display.setCursor(72,57);
  gb.display.setFontSize(1);
  gb.display.setColor(YELLOW);
  gb.display.println(keys);
}

//----------------------Menus draw----------------

void drawBackground(uint8_t graph[100])
{
  int index=0;
  for(int i=0;i<10;i++)
  {
    for(int j=0;j<10;j++)
    {
      if(graph[index]==1)
      {
        gb.display.drawImage(j*8,i*6,IMAGE_WALL1);
      }
      else if(graph[index]==11)
      {
        gb.display.drawImage(j*8,i*6,IMAGE_WOOD_PILLAR_LEFT); 
      }
      else if(graph[index]==13)
      {
        gb.display.drawImage(j*8,i*6,IMAGE_WOOD_PILLAR_RIGHT); 
      }
      else if(graph[index]==14)
      {
        gb.display.drawImage(j*8,i*6,IMAGE_WOOD_LEFT_CORNER); 
      }
      else if(graph[index]==16)
      {
        gb.display.drawImage(j*8,i*6,IMAGE_WOOD_RIGHT_CORNER); 
      }
      else if(graph[index]==17)
      {
        gb.display.drawImage(j*8,i*6,IMAGE_WOOD_UP); 
      }
      index++;
    }
  }
}

void drawTitleScreen()
{
  drawBackground(MainGraph);
  gb.display.drawImage(0,15,IMAGE_TITLE);
  gb.display.setColor(BLUE);
  gb.display.setCursor(38, 45);
  gb.display.println("by");
  gb.display.setCursor(30, 52);
  gb.display.println("sentinel87");
}

void drawMainMenu(uint8_t TitleGraph[100],int8_t cursorPosY)
{
  drawBackground(TitleGraph);
  gb.display.setCursor(10, 5);
  gb.display.setFontSize(1);
  gb.display.setColor(WHITE);
  //gb.display.println(gb.getCpuLoad());
  //gb.display.println(gb.getFreeRam());
  gb.display.drawImage(0,10,IMAGE_TITLE);
  gb.display.setCursor(17, 40);
  gb.display.setFontSize(1);
  gb.display.setColor(WHITE);
  gb.display.println(newGameStr);
  gb.display.setCursor(17, 46);
  gb.display.println(newHighScoreStr);
  gb.display.drawImage(10,cursorPosY,IMAGE_CURSOR);
}

void drawScoreBoard(uint8_t ScoreGraph[100],int ScoreBoard[5])
{
  drawBackground(ScoreGraph);
  gb.display.setFontSize(1);
  gb.display.setColor(YELLOW);
  for(int i=0;i<5;i++)
  {
    String scoreStr=scoreStrMod(ScoreBoard[i]);
    String index=(String)(i+1);
    scoreStr=index + ". " + scoreStr;
    gb.display.setCursor(22, 9 +(i*6));
    gb.display.println(scoreStr);
  }
  gb.display.setColor(WHITE);
  gb.display.setCursor(30, 48);
  gb.display.println(returnStr);
  gb.display.drawImage(21,49,IMAGE_CURSOR);
}

void drawPauseScreen(uint8_t EndGraph[100],int8_t cursorPosY)
{
  drawBackground(EndGraph);
  gb.display.setFontSize(1);
  gb.display.setColor(YELLOW);
  String scoreStr=scoreStrMod(Score);
  gb.display.setCursor(19, 17);
  drawCenterText(gameScoreStr,17);
  gb.display.setCursor(22, 25);
  gb.display.println(scoreStr);
  gb.display.setColor(WHITE);
  gb.display.setCursor(24, 40);
  gb.display.println(returnStr);
  gb.display.setCursor(24, 46);
  gb.display.println(quitStr);
  gb.display.drawImage(18,cursorPosY,IMAGE_CURSOR);
}

void drawEndgameScreen(uint8_t EndGraph[100],bool NewHighScore,uint8_t LevelId)
{
  drawBackground(EndGraph);
  gb.display.setFontSize(1);
  gb.display.setColor(WHITE);
  gb.display.setCursor(18, 17);
  if(LevelId==200)
  {
    drawCenterText(victoryStr,17);
    gb.display.drawImage(35,5,IMAGE_VICTORY);
  }
  else
  {
    drawCenterText(gameOverStr,17);
    gb.display.drawImage(35,5,IMAGE_FAILURE); 
  }
  if(NewHighScore)
  {
    gb.display.setCursor(18, 25);
    gb.display.setColor(GREEN);
    drawCenterText(highScoreStr,25); 
  }
  String scoreStr=scoreStrMod(Score);
  gb.display.setColor(YELLOW);
  gb.display.setCursor(22, 40);
  gb.display.println(scoreStr);
}

String scoreStrMod(int score)
{
  String result=String(score);
  int count=result.length();
  if(count<6)
  {
    String spaces="";
    for(int i=count;i<=6;i++)
    {
          spaces+=" ";
    }
    result=spaces + result;
  }
  return result;
}

void drawCenterText(const MultiLang phrase[3],int posY)
{
  String text=gb.language.get(phrase,3);
  int count=text.length()*4;
  int startingPoint=40-(count/2);
  gb.display.setCursor(startingPoint, posY);
  gb.display.println(text);
}

//----------------------Player draw---------------

void drawPlayer(int8_t posX,int8_t posY,bool climbing,bool walking, bool attacking, int8_t playerDirection)
{
  uint8_t modifier=10;
  if(posY<0)
  {
    modifier=10+posY;
  }
  if(climbing==true)
  {
    if(hanging==true)
    {
      gb.display.drawImage(posX,posY,IMAGE_MOVING_LADDER);
    }
    else
    {
      gb.display.drawImage(posX,posY,LadderIdle);
    }
  }
  else if(walking==true)
  {
    if(playerDirection==1)
    {
      gb.display.drawImage(posX,posY,RightIdle);
    }
    else
    {
      gb.display.drawImage(posX,posY,LeftIdle);
    }
  }
  else if(attacking==true)
  {
    if(playerDirection==1)
    {
      gb.display.drawImage(posX,posY,FightRIdle);
    }
    else
    {
      gb.display.drawImage(posX,posY,FightLIdle);
    }
  }
  else
  {
    if(playerDirection==1)
    {
      gb.display.drawImage(posX,posY,IMAGE_MOVING_RIGHT);
    }
    else
    {
      gb.display.drawImage(posX,posY,IMAGE_MOVING_LEFT);
    }
  }
}

//----------------------Enemies draw---------------

void drawKnightEnemy(uint8_t displayPlan[114])
{
  gb.display.drawImage(displayPlan[18], displayPlan[19], Knight);
}

void drawGhostEnemy(uint8_t displayPlan[114])
{
  if(displayPlan[22]==0) //moving left
  {
    gb.display.drawImage(displayPlan[18], displayPlan[19], GhostL);
  }
  else //moving right
  {
    gb.display.drawImage(displayPlan[18], displayPlan[19], GhostR);
  }
}

void drawSkullEnemy(uint8_t displayPlan[114])
{
  gb.display.drawImage(displayPlan[18], displayPlan[19], IMAGE_FLYINGSKULL);
}

void drawAxeGhostEnemy(uint8_t displayPlan[114])
{
  gb.display.drawImage(displayPlan[18], displayPlan[19], IMAGE_GHOSTAXE);
}

void drawChimereEnemy(uint8_t displayPlan[114])
{
  gb.display.drawImage(displayPlan[18], displayPlan[19], Chimere);
}

void drawSpectreEnemy(uint8_t displayPlan[114])
{
  gb.display.drawImage(displayPlan[18], displayPlan[19], Spectre);
}

void drawSnakeEnemy(uint8_t displayPlan[114])
{
  if(displayPlan[22]==0) //moving left
  {
    gb.display.drawImage(displayPlan[18], displayPlan[19], SnakeL);
  }
  else //moving right
  {
    gb.display.drawImage(displayPlan[18], displayPlan[19], SnakeR);
  }
}

void drawGargoyleEnemy(uint8_t displayPlan[114])
{
  if(displayPlan[22]==0) //moving left
  {
    gb.display.drawImage(displayPlan[18], displayPlan[19], GargoyleL);
  }
  else //moving right
  {
    gb.display.drawImage(displayPlan[18], displayPlan[19], GargoyleR);
  }
}

void drawSkeletonEnemy(uint8_t displayPlan[114])
{
  gb.display.drawImage(displayPlan[18], displayPlan[19], Skeleton);
}

void drawGuardianEnemy(uint8_t displayPlan[114])
{
  gb.display.drawImage(displayPlan[18], displayPlan[19], Guardian);
}

void drawWraithEnemy(uint8_t displayPlan[114])
{
  if(displayPlan[22]==0) //moving left
  {
    gb.display.drawImage(displayPlan[18], displayPlan[19], WraithL);
  }
  else //moving right
  {
    gb.display.drawImage(displayPlan[18], displayPlan[19], WraithR);
  }
}
